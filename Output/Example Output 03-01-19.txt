

===== EDSAC FORTRAN II Compiler  =====


:: Loading Command Arguments ::

+dump data structures
+dump tokens
+load: Tests/Stmt_Tests/PROGRAM_STRUCTURE_tests.f
+load: Tests/Stmt_Tests/CALL_tests.f
+load: Tests/Stmt_Tests/ARITH_FUNCTION_tests.f



:: Loading File Inputs ::

 --- Tests/Stmt_Tests/PROGRAM_STRUCTURE_tests.f ---
Verifying...
Loaded Tests/Stmt_Tests/PROGRAM_STRUCTURE_tests.f[4] successfully. 
Begin File Dump(Name=Tests/Stmt_Tests/PROGRAM_STRUCTURE_tests.f):
      PROGRAM 
      CALL DASHP123(5^6) 
      CALL HEWD4SADD5SS(5) 
      END 

End File Dump

 --- Tests/Stmt_Tests/CALL_tests.f ---
Verifying...
Loaded Tests/Stmt_Tests/CALL_tests.f[10] successfully. 
Begin File Dump(Name=Tests/Stmt_Tests/CALL_tests.f):
      SUBROUTINE DASHP(X,Y,D) 
      CALL PLOT(X,Y,2) 
      RETURN 
      CALL DASHP(5.0, 10, 10+5) 
      END 
      PROGRAM 
      CALL DASHP123(5^6) 
      CALL PLOT(5.0,5.0,-3) 
      CALL PLOT(-5.0) 
      END 

End File Dump

 --- Tests/Stmt_Tests/ARITH_FUNCTION_tests.f ---
Verifying...
Loaded Tests/Stmt_Tests/ARITH_FUNCTION_tests.f[8] successfully. 
Begin File Dump(Name=Tests/Stmt_Tests/ARITH_FUNCTION_tests.f):
      PROGRAM 
      FffiSTF(X) = A*X + B 
      SECONDF(X, B) = A*X + B 
      THffiDF(D) = FIRSTF(E)/D 
      FOURTHF(F, G) = SECONDF(F,THffiDF(G)) 
      FIFTHF(I, A)= 3. 0*A**I 
      SIXTHF (J) = J + K 
      END 

End File Dump


:: Beginning preliminary parsing of files ::

 --- Tests/Stmt_Tests/PROGRAM_STRUCTURE_tests.f ---
File Segment breakdown: 
+PROGRAM [1,4]{   PROGRAM}.
Begin Segment Dump(Type=PROGRAM)
      PROGRAM
      CALL DASHP123(5^6)
      CALL HEWD4SADD5SS(5)
      END
End Segment Dump 

Beginning Tokenization: 
[1][PROGRAM_TOKEN] {PROGRAM	}
[2][CALL_TOKEN] {CALL DASHP123(5^6)	}
[3][CALL_TOKEN] {CALL HEWD4SADD5SS(5)	}
[4][END_TOKEN] {END	}

 --- End --- 


 --- Tests/Stmt_Tests/CALL_tests.f ---
File Segment breakdown: 
+SUBROUTINE [1,5]{   SUBROUTINEDASHP(X,Y,D)}.
Begin Segment Dump(Type=SUBROUTINE)
      SUBROUTINE DASHP(X,Y,D)
      CALL PLOT(X,Y,2)
      RETURN
      CALL DASHP(5.0, 10, 10+5)
      END
End Segment Dump 

+PROGRAM [6,10]{   PROGRAM}.
Begin Segment Dump(Type=PROGRAM)
      PROGRAM
      CALL DASHP123(5^6)
      CALL PLOT(5.0,5.0,-3)
      CALL PLOT(-5.0)
      END
End Segment Dump 

Beginning Tokenization: 
[1][SUBROUTINE_TOKEN] {SUBROUTINE DASHP(X,Y,D)	}
[2][CALL_TOKEN] {CALL PLOT(X,Y,2)	}
[3][RETURN_TOKEN] {RETURN	}
[4][CALL_TOKEN] {CALL DASHP(5.0, 10, 10+5)	}
[5][END_TOKEN] {END	}
[6][PROGRAM_TOKEN] {PROGRAM	}
[7][CALL_TOKEN] {CALL DASHP123(5^6)	}
[8][CALL_TOKEN] {CALL PLOT(5.0,5.0,-3)	}
[9][CALL_TOKEN] {CALL PLOT(-5.0)	}
[10][END_TOKEN] {END	}

 --- End --- 


 --- Tests/Stmt_Tests/ARITH_FUNCTION_tests.f ---
File Segment breakdown: 
+PROGRAM [1,8]{   PROGRAM}.
Begin Segment Dump(Type=PROGRAM)
      PROGRAM
      FffiSTF(X) = A*X + B
      SECONDF(X, B) = A*X + B
      THffiDF(D) = FIRSTF(E)/D
      FOURTHF(F, G) = SECONDF(F,THffiDF(G))
      FIFTHF(I, A)= 3. 0*A**I
      SIXTHF (J) = J + K
      END
End Segment Dump 

Beginning Tokenization: 
[1][PROGRAM_TOKEN] {PROGRAM	}
[ERROR] Cannot find valid token for line [2]{FffiSTF(X) = A*X + B}
[3][ARITH_FUNCTION_TOKEN] {SECONDF(X, B) = A*X + B	}
[ERROR] Cannot find valid token for line [4]{THffiDF(D) = FIRSTF(E)/D}
[5][ARITH_FUNCTION_TOKEN] {FOURTHF(F, G) = SECONDF(F,THffiDF(G))	}
[6][ARITH_FUNCTION_TOKEN] {FIFTHF(I, A)= 3. 0*A**I	}
[7][ARITH_FUNCTION_TOKEN] {SIXTHF (J) = J + K	}
[8][END_TOKEN] {END	}

 --- End --- 




==== End of runtime  ====

