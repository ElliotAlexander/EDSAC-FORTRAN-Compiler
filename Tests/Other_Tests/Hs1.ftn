      LOGICAL FUNCTION CKACC(V1,V2,VA,ACC)
      LOGICAL ABSACC
C      FUNCTION TO RETURN WHETHER V1 AND V2 ARE WITHIN A SPECIFIED
C      ACCURACY, (ACC) OF VA
C      FUNCTION RETURNS .TRUE. IF ACCURACY OK.
      BL=1E-73
C      IF VA IS SO SMALL THAT DIVISOR WOULD CAUSE ZERO DIVIDE,
C      USE ABSOLUTE VALUE OF INTERVAL AS ACCURACY CRITERIA
      IF(ABS(VA).LT.BL)CKACC=ABSACC(V1,V2,ACC,BL)
      IF(ABS(VA).LT.BL)RETURN
C      NO, SO WE CAN NOW USE CONVENTIONAL CRITERIA
      CKACC=.FALSE.
      IF(ABS((V1-V2)/VA).LT.ACC)CKACC=.TRUE.
      RETURN
      END
C
C******
C
C
      LOGICAL FUNCTION ABSACC(V1,V2,ACC,BL)
C      FUNCTION TO RETURN WHETHER OR NOT V1 AND V2 ARE WITHIN A
C      SPECIFIED ACCURACY, (ACC) OF EACH OTHER. THE ABSOLUTE
C      VALUES ARE TOO SMALL TO USE CONVENTIONAL CRITERIA.
C      FUNCTION RETURNS .TRUE. IF ACCURACY OK.
      ABSACC=.FALSE.
      VX=V1
      IF(V2.GT.BL)VX=V2
C      THIS HOPEFULLY GIVES A DIVISOR NE 0.0
      IF(ABS((V1-V2)/VX).LT.ACC)ABSACC=.TRUE.
      RETURN
      END
C
C******
C
C
      FUNCTION F(VN)
      COMMON/CB01/DCSL(10),BETA(10),SNA(10),C0(10),X0ALO(10),
     XX0SIO(10),D(10),VB(10),CM0(10),SND(10)
      COMMON/CB04/ACC1,ACC2,IFLAG
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
      COMMON/CB07/PHIS,VI,PSIL,VA,VALOX,VGATE,VSIOX
      COMMON/CB08/EA,EPD,B,EXPBV,EP0,ES,EALOX,ESIOX
C      THIS FUNCTION RETURNS THE LOOP VOLTAGE OF THE SYSTEM AS A
C      FUNCTION OF THE VOLTAGE DROP ACROSS THE AQUEOUS PHASE.
C      THE BOUNDARY VALUES CALCULATED ARE ONLY PHYSICALLY MEANINGFUL
C      WHEN F(VN) = 0.0
      CALL CK(61,VN,'VN    ','F     ')
C      SAVE EXPONENT OF ARGUMENT TO OBVIATE MULTIPLE RECALCULATION LATER.
      EXPBV=ADBEXP(-BETA(ISET)*VN)
      CALL CK(7 ,EXPBV,'EXPBV ','F     ')
C      CALCULATE FIELDS AT SOLUTION INTERFACE
      CALL GETEA(VN)
      CALL CK(8 ,EA    ,'EA    ','F     ')
C      CALCULATE DUMMY FIELD B
      CALL GETB
      CALL CK(9 ,B     ,'B     ','F     ')
      FIFLAG=FLOAT(IFLAG)
      CALL CK(10,FIFLAG,'IFLAG ','F     ')
C      CALCULATE VOLTAGE DROP ACROSS SURFACE LAYER
C      EXPRESSION TAKES 1 OF 2 FORMS,
C      DEPENDING ON A FLAG SET BY S/R GETB
      IF(IFLAG.EQ.0)CALL GPSIL0
      IF(IFLAG.NE.0)CALL GPSIL1
      CALL CK(14,PSIL  ,'PSIL  ','F     ')
C      CALCULATE FIELDS AT SURFACE LAYER/AL2O3 INTERFACE
      CALL GETEP0
      CALL CK(11,EP0   ,'EP0   ','F     ')
C      CALCULATE SI SURFACE POTENTIAL
      CALL GETPHI
      CALL CK(12,PHIS  ,'PHIS  ','F     ')
C      CALCULATE VOLTAGE DROP ACROSS INSULATOR
      CALL GETVI
      CALL CK(13,VI    ,'VI    ','F     ')
C      STARTING IN BULK SI, CALCULATE LOOP VOLTAGE
      F=PSIL+VN+VB(ISET)-PHIS-VI
      CALL CK(15,F     ,'F     ','F     ')
      RETURN
      END
C
C******
C
C
      SUBROUTINE GETB
      COMMON/CB04/ACC1,ACC2,IFLAG
      COMMON/CB06/C1,C2,C3,C4,C5,C6,C7,VINV,EINV,VSTART,VEND
      COMMON/CB08/EA,EPD,B,EXPBV,EP0,ES,EALOX,ESIOX
C      ROUTINE TO CALCULATE DUMMY MFIELD USED DURING CALCULATION
C      OF PSIL. EXPRESSION FOR PSIL IS 1 OF 2 FORMS,
C      DEPENDING ON VALUE OF FLAG SET BY THIS ROUTINE.
      B=(EPD*EPD)-(C4*EXPBV)
      IFLAG=0
      IF(B.GT.0.0)IFLAG=1
      FIFLAG=FLOAT(IFLAG)
      CALL CK(18,FIFLAG,'IFLAG ','GETB  ')
      B=SQRT(ABS(B))
      CALL CK(19,B     ,'B     ','GETB  ')
      RETURN
      END
C
C******
C
C
      SUBROUTINE GPSIL0
      COMMON/CB01/DCSL(10),BETA(10),SNA(10),C0(10),X0ALO(10),
     XX0SIO(10),D(10),VB(10),CM0(10),SND(10)
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
      COMMON/CB07/PHIS,VI,PSIL,VA,VALOX,VGATE,VSIOX
      COMMON/CB08/EA,EPD,B,EXPBV,EP0,ES,EALOX,ESIOX
      COMMON/CB11/VSL(100,10),ESL(100,10),QSL(100,10),XSL(100),LIMSL,
     XXSLLOC,XMAXSL
      COMMON/CB13/C8,C9,C10,C11,C12,C13,C14,C15,C16,C17,C18,C19,C20,C21
C      ROUTINE TO CALCULATE VOLTAGE DROP ACROSS THE SURFACE LAYER
      S0=B*BETA(ISET)*(XSLLOC-D(ISET))/2.0
      CALL CK(20,S0    ,'S0    ','GPSIL0')
      S1=EPD/B
      CALL CK(21,S1    ,'S1    ','GPSIL0')
      CS0=COS(S0)
      CALL CK(22,CS0   ,'CS0   ','GPSIL0')
      SS0=SIN(S0)
      CALL CK(24,SS0   ,'SS0   ','GPSIL0')
      P1=CS0-(S1*SS0)
      CALL CK(23,P1    ,'P1    ','GPSIL0')
      PSIL=C8*LOG(ABS(P1))
      CALL CK(26,PSIL  ,'PSIL  ','GPSIL0')
      RETURN
      END
C
C******
C
C
      SUBROUTINE GPSIL1
      COMMON/CB01/DCSL(10),BETA(10),SNA(10),C0(10),X0ALO(10),
     XX0SIO(10),D(10),VB(10),CM0(10),SND(10)
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
      COMMON/CB07/PHIS,VI,PSIL,VA,VALOX,VGATE,VSIOX
      COMMON/CB08/EA,EPD,B,EXPBV,EP0,ES,EALOX,ESIOX
      COMMON/CB11/VSL(100,10),ESL(100,10),QSL(100,10),XSL(100),LIMSL,
     XXSLLOC,XMAXSL
      COMMON/CB13/C8,C9,C10,C11,C12,C13,C14,C15,C16,C17,C18,C19,C20,C21
C      ROUTINE TO CALCULATE VOLTAGE ACROSS SURFACE LAYER
C      AS EXP(150) IS LOTS AND LOTS, THERE ARE THREE
C      DIFFERENT EXPRESIONS THAT CAN BE COMPUTED, ONE
C      FOR EACH OF THE THREECREGIONS
C      S0 < -150,
C      S0 > +150,
C      -150 < S0 < +150
C
      S0=B*BETA(ISET)*(D(ISET)-XSLLOC)/2.0
      CALL CK(66,S0    ,'S0    ','GPSIL1')
      S1=EPD/B
      CALL CK(67,S1    ,'S1    ','GPSIL1')
C      S0 < -150 :
      SM=S1-1.0
      CALL CK(62,SM,'SM    ','GPSIL1')
      IF(S0.LT.-150)PSIL=C8*(LOG(ABS(SM/2.0))-S0)
      IF(S0.LT.-150)RETURN
C      S0 > +150 :
      SP=S1+1.0
      CALL CK(63,SP,'SP    ','GPSIL1')
      IF(S0.GT.+150)PSIL=C8*(LOG(ABS(SP/2.0))+S0)
      IF(S0.GT.+150)RETURN
C      OK, SO -150 < S0 < +150
      PSIL=C8*LOG(0.5*ABS((SP*ADBEXP(S0))-(SM*ADBEXP(-S0))))
      CALL CK(33,PSIL  ,'PSIL  ','GPSIL1')
      RETURN
      END
C
C******
C
C
      FUNCTION S(X)
C      FUNCTION TO RETURN THE SIGN OF ITS ARGUMENT
      S=0.0
      IF(X.LT.0.0)S=-1.0
      IF(X.GT.0.0)S=+1.0
      RETURN
      END
C
C******
C
C
      SUBROUTINE GETEP0
      COMMON/CB01/DCSL(10),BETA(10),SNA(10),C0(10),X0ALO(10),
     XX0SIO(10),D(10),VB(10),CM0(10),SND(10)
      COMMON/CB04/ACC1,ACC2,IFLAG
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
      COMMON/CB06/C1,C2,C3,C4,C5,C6,C7,VINV,EINV,VSTART,VEND
      COMMON/CB07/PHIS,VI,PSIL,VA,VALOX,VGATE,VSIOX
      COMMON/CB08/EA,EPD,B,EXPBV,EP0,ES,EALOX,ESIOX
C      ROUTINE TO CALCULATE FIELDS AT SURFACE LAYER/INSULATOR INTERFACE
C      SIGN IS CALCULATED FROM DERIVATIVE INFORMATION, SO WE NEED THE
C      POSITION DEFINED. GETEP0 IS A BOUNDARY CALCULATION ROUTINE, SO
C      ARGUMENT OF SIGN FUNCTION ( = X ) IS SET TO 0.0
      IF(IFLAG.EQ.0)EP0=ESURF0(0.0)
      IF(IFLAG.NE.0)EP0=ESURF1(0.0)
      CALL CK(34,EP0   ,'EP0   ','GETEP0')
      RETURN
      END
C
C******
C
C
      SUBROUTINE GETPHI
      COMMON/CB01/DCSL(10),BETA(10),SNA(10),C0(10),X0ALO(10),
     XX0SIO(10),D(10),VB(10),CM0(10),SND(10)
      COMMON/CB02/Q,DC0,DCSI,DCALO,DCSIO,CCI,DCAQ0
      COMMON/CB04/ACC1,ACC2,IFLAG
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
      COMMON/CB06/C1,C2,C3,C4,C5,C6,C7,VINV,EINV,VSTART,VEND
      COMMON/CB07/PHIS,VI,PSIL,VA,VALOX,VGATE,VSIOX
      COMMON/CB08/EA,EPD,B,EXPBV,EP0,ES,EALOX,ESIOX
      COMMON/CB14/ICHECK
C      ROUTINE TO CALCULATE SURFACE POTENTIAL OF SILICON, GIVEN FIELD.
C      CALCULATE SURFACE FIELD
      ES=EP0*DCSL(ISET)/DCSI
      CALL CK(35,ES    ,'ES    ','GETPHI')
C      THE EQUATION G(PHIS) = 0.0 IS SOLVED USING FALSE POSITION,
C      WITH INITIAL VALUES OF 0.0 AND VB(ISET). ITERATION TERMINATED
C      WHEN ACCURACY > ACC2
C      SET UP INITIAL CONDITIONS
      V1=0.0
      V2=2.0*VINV
      G1=G(V1)
      CALL CK(36,G1    ,'G1    ','GETPHI')
      G2=G(V2)
      CALL CK(37,G2    ,'G2    ','GETPHI')
C      IF THE SURFACE FIELD SUPPLIED TO START THE ITERATION IS
C      MUCH HIGHER THAN THE INVERSION SURFACE FIELD, DON'T
C      BOTHER TO CALCULATE PHIS, JUST SET IT TO 2*VINV, AND SPLIT
      PHIS=2.0*VINV
      IF(ABS(ES).GT.ABS(10.0*EINV))RETURN
      CALL CK(58,PHIS,'      ','GETPHI')
C      IF THE START POINTS OF THE ITERATION ARE
C      OF THE SAME SIGN, SOMEONE HATH BLUNDERED
      IF(S(G1).EQ.S(G2))RETURN
      GO=G1
      GN=0.0
C      START ITERATIONS
      DO 100 I=1,32000
      CALL CK(-2,FI,'++++++','++++++')
      FI=FLOAT(I)
      CALL CK(38,FI    ,'I     ','GETPHI')
C      SEE AT WHICH END OF THE INTERVAL DOES THE FUNCTION NEED TO BE
C      RE-EVALUATED (NOTE NOT AT ALL THE FIRST TIME ROUND)
      IF(S(GN).EQ.S(G1))G1=G(V1)
      IF(S(GN).EQ.S(G2))G2=G(V2)
      CALL CK(40,G1    ,'G1    ','GETPHI')
      CALL CK(41,G2    ,'G2    ','GETPHI')
C      CALCULATE NEW VOLTAGE VALUE
      PHIS=((V2*G1)-(V1*G2))/(G1-G2)
      CALL CK(39,PHIS  ,'PHIS  ','GETPHI')
C      CALCULATE NEW G-VALUE
      GN=G(PHIS)
      CALL CK(42,GN    ,'GN    ','GETPHI')
C      THROW AWAY THE OLD POINT THAT IS ON THE SAME SIDE OF THE AXIS
C      AS THE NEW ONE
      IF(S(GN).EQ.S(G1))V1=PHIS
      IF(S(GN).EQ.S(G2))V2=PHIS
      CALL CK(43,V1    ,'V1    ','GETPHI')
      CALL CK(44,V2    ,'V2    ','GETPHI')
C      IF ACCURACY OK, THEN SPLIT
      IF(ABS((GN-GO)/GN).LT.ACC2)RETURN
C      NO, SO SAVE OLD VALUE
      GO=GN
      CALL CK(45,GO    ,'GO    ','GETPHI')
C      AND TRY AGAIN
100   CONTINUE
C      NEVER HERE
      CALL PANIC(5)
      RETURN
      END
C
C******
C
C
      FUNCTION G(V)
      COMMON/CB01/DCSL(10),BETA(10),SNA(10),C0(10),X0ALO(10),
     XX0SIO(10),D(10),VB(10),CM0(10),SND(10)
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
      COMMON/CB06/C1,C2,C3,C4,C5,C6,C7,VINV,EINV,VSTART,VEND
      COMMON/CB08/EA,EPD,B,EXPBV,EP0,ES,EALOX,ESIOX
C      THIS FUNCTION REPRESENTS THE RELATION BETWEEN THE SURFACE FIELD
C      IN THE SILICON AND THE SURFACE POTENTIAL. WE REQUIRE THE
C      POTENTIAL AS A FUNCTION OF THE FIELD, SO THE RELATION HAS
C      TO BE INVERTED NUMERICALLY, THE CORRECT SOLUTION
C      BEING GIVEN BY G(V) = 0.0
      A1=BETA(ISET)*V
      CALL CK(46,A1    ,'A1    ','G     ')
      G=ES+(C5*H(A1,C6))
      CALL CK(47,G     ,'G     ','G     ')
C      WHERE H(A,B) IS THE FUNCTION DEFINED BY SZE, P431
      RETURN
      END
C
C******
C
C
      FUNCTION H(A1,A2)
C      FUNCTION USED TO CALCULATE SURFACE FIELD AS A FUNCTION OF
C      POTENTIAL IN SILICON
      EXPA1=ADBEXP(A1)
      CALL CK(48,EXPA1 ,'EXPA1 ','H     ')
      H1=(1.0/EXPA1) +A1-1.0
      CALL CK(49,H1    ,'H1    ','H     ')
      H2=A2*(EXPA1-A1-1.0)
      CALL CK(50,H2    ,'H2    ','H     ')
      H=H1+H2
      CALL CK(51,H     ,'H     ','H     ')
      IF(H.LT.0.0)CALL PANIC(6)
      H=SQRT(H)
      RETURN
      END
C
C******
C
C
      FUNCTION ADBEXP(X)
C      FUNCTION TO CALCULATE EXONENT OF ARGUMENT, WITHOUT
C      FORCING 2970 ERROR HANDLER PROCEDURE IF
C      OVERFLOW OR UNDERFLOW IMMENANT
C      OVERFLOW:
      IF(X.GT.174.6)CALL PANIC(9)
C      UNDERFLOW:
      IF(X.LT.-180.2)ADBEXP=0.0
      IF(X.LT.-180.2)RETURN
C      NO, SO CARRY ON
      ADBEXP=EXP(X)
      RETURN
      END
C
C******
C
C
      SUBROUTINE GETVI
      COMMON/CB01/DCSL(10),BETA(10),SNA(10),C0(10),X0ALO(10),
     XX0SIO(10),D(10),VB(10),CM0(10),SND(10)
      COMMON/CB02/Q,DC0,DCSI,DCALO,DCSIO,CCI,DCAQ0
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
      COMMON/CB07/PHIS,VI,PSIL,VA,VALOX,VGATE,VSIOX
      COMMON/CB08/EA,EPD,B,EXPBV,EP0,ES,EALOX,ESIOX
C      ROUTINE TO CALCULATE VOLTAGE DROP ACROSS INSULATOT
C      CALCULATE FIELD IN AL2O3
      EALOX=EP0*DCSL(ISET)/DCALO
      CALL CK(52,EALOX ,'EALOX ','GETVI ')
C      VOLTAGE DROP ACROSS AL2O3
      VALOX=-EALOX*X0ALO(ISET)
      CALL CK(53,VALOX ,'VALOX ','GETVI ')
C      FIELD IN SIO2
      ESIOX=ES*DCSIO/DCSI
      CALL CK(54,ESIOX ,'ESIOX ','GETVI ')
C      VOLTAGE DROP ACROSS SIO2
      VSIOX=-ESIOX*X0SIO(ISET)
      CALL CK(55,VSIOX ,'VSIOX ','GETVI ')
C      GATE VOLTAGE
      VGATE=VSIOX+PHIS
      CALL CK(56,VGATE ,'VGATE ','GETVI ')
C      VOLTAGE DROP ACROSS INSULATOR
      VI=VALOX+VSIOX
      CALL CK(57,VI    ,'VI    ','GETVI ')
      RETURN
      END
C
C******
C
C
      SUBROUTINE PROFIL
C      ROUTINE TO CALCULATE CHARGE, VOLTAGE AND FIELD PROFILES.
C      BOUNDARY CONDITIONS PREVIOUSLY SET BY S/R CLOSLP
C      AQUEOUS PHASE
      CALL AQPROF
C      SURFACE LAYER
      CALL SLPROF
C      SILICON
      CALL SIPROF
      RETURN
      END
C
C******
C
C
