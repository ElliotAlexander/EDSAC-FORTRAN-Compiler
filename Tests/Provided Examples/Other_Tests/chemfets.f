      PROGRAM SQUONK
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB14/ICHECK
      ICHECK=0
      CALL SETUP
      CALL DOSUMS
      CALL OUTPUT
      STOP
      END
C
C******
C
C
      SUBROUTINE DOSUMS
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB01/DCSL(10),BETA(10),SNA(10),C0(10),X0ALO(10),
     XX0SIO(10),D(10),VB(10),CM0(10),SND(10)
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
C      ROUTINE TO OVERSEE THE GENERATION OF ALL THE CURVES TO BE PLOTTED
      COMMON/CB07/PHIS,VI,PSIL,VA,VALOX,VGATE,VSIOX
      COMMON/CB14/ICHECK
      COMMON/CB15/IPTR,POSSVA(2,100),LPOSVA
      LSET=2
      LSET=NSET
      DO 100 ISET=1,LSET
      CALL DOASUM
100   CONTINUE
C      SAVE FINAL SET COUNT IN NON-VOLATILE VARIABLE
      ISET=LSET
      RETURN
      END
C
C******
C
C
      SUBROUTINE DOASUM
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB01/DCSL(10),BETA(10),SNA(10),C0(10),X0ALO(10),
     XX0SIO(10),D(10),VB(10),CM0(10),SND(10)
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
      COMMON/CB06/C1,C2,C3,C4,C5,C6,C7,VINV,EINV,VSTART,VEND
      COMMON/CB15/IPTR,POSSVA(2,100),LPOSVA
      COMMON/CB17/TOTUAQ,TOTUSL,TOTUSI,UMIN,UTOT
C      ROUTINE TO GENERATE ONE PROFILE, GIVEN A SET OF PARAMETERS
C      DEFINED BY ISET
C      UNFORTUNATELY, THE SOLUTION OF F(VA) = 0.0 IS NOT UNIQUE.
C      SO STRATEGY IS AS FOLLOWS:
C      SUBROUTINE CKPLOT MOOCHES ALONG THE VA AXIS, STARTING AT VSTART
C      AND ENDING AT VEND. EVERY TIME F CROSSES 0.0, THE V-VALUES OF
C      THE TESTED POINTS ON EITHER SIDE OF THE CROSSING ARE LOADED INTO
C      POSSVA, AND THE POINTER INCREMENTED. SO, ON EXIT FROM
C      SUBROUTINE CKPLOT, IPTR CONTAINS THE NUMBER OF ZERO CROSSINGS,
C      AND POSSVA (1,X),(2,X) THE STRADDLING VOLTAGES FOR THE
C      BISECTION ROUTINE. THEN SUBROUTINE CLOSLP TAKES EACH CROSSING
C      POINT IN TURN, AND SOLVES THE COMPLETE SYSTEM FOR IT. SUBROUTINE
C      ENERGY CALCULATES THE TOTAL ELECTROSTATIC ENERGY FOR THE SYSTEM
C      GIVEN THE CURRENT SET OF BOUNDARY CONDITIONS CALCULATED BY
C      CLOSLP. IF THE ENERGY IS AT AN ALL-TIME LOW, ENERGY STORES
C      THE BOUNDARY CONDITIONS. (WATCH OUT FOR SNEAKY TRICK WITH
C      COMMON BLOCKS CB07 AND CB08). AT THE END OF THE LOOP,
C      SUBROUTINE RELOAD SHOVES THE BOUNDARY CONDITIONS FOR THE
C      LOWEST ENERGY CONFIGURATION BACK INTO THE BOUNDARY CONDITION
C      COMMON BLOCKS (MORE SNEAKY TRICKS), AND SUBROUTINE PROFIL
C      WORKS OUT ALL THE CHARGE, FIELD AND VOLTAGE PROFILES AS
C      A FUNCTION OF POSITION.
C      SO, BACK TO THE STORY...  ..  .
C      SET UP MATH. CONSTANTS THAT ARE A FUNCTION OF ISET TO SAVE
C      REPEATED CALCULATION DURING NUMERICAL ITERATIONS
C      IN S/R CLOSLP
      CALL SETMTH
C      INITIALISE POINTER FOR STRADDLING VOLTAGE VECTOR
      IPTR=0
C      SWITCH OFF CHECKPOINT ROUTINE
      ICHECK=1
      ICHECK=0
C      DRAW CHECKPLOT IE FUNCTION  F VS VA
      CALL CKPLOT
C      CKPLOT RETURNS POSSVA FULL OF STRADDLING POINT PAIRS, AND
C      IPTR POINTING AT THE LAST OCCUPIED CELL.
C      IF NONE FOUND, IPTR IS STILL 0, SO PANIC
      IF(IPTR.EQ.0)CALL PANIC(15)
C      SWITCH ON CHECKPOINT ROUTINE
      ICHECK=1
      ICHECK=0
C      ISENSE IS A FLAG THAT IS SET WHEN A SENSIBLE SOLUTION IS FOUND
C      RESET ISENSE
      ISENSE=0
C      SET UP LOOP TO DEAL WITH ALL POSSIBLE SOLUTIONS, ONE SET AT
C      A TIME.
      WRITE(4,1001)
      WRITE(1,1001)
      DO 100 I=1,IPTR
C      SWITCH OFF CHECKPOINT ROUTINE
      ICHECK=0
C      SOLVE LOOP
      CALL CLOSLP(I,FLAST,II)
C      FLAST CONTAINS THE VALUE OF F THAT SATISFIED THE BISECTION
C      ROUTINE TO AN ACCURACY OF ACC1.
C      II IS THE NUMBER OF ITERATIONS REQUIRED TO SATISFY IT
C      CALCULATE ENERGY
C      GIVE SUBROUTINE ENERGY THE VALUE OF THE LOOP
C      VOLTAGE, COS IF IT'S SILLY, DON'T BOTHER TO CALCULATE
C      ENERGY
      CALL ENERGY(FLAST,ISENSE)
C      OUTPUT VOLTAGE AND ENERGY
C      AND LOOP VOLTAGE
      WRITE(1,1000)VA,UTOT,FLAST,II
      WRITE(4,1000)VA,UTOT,FLAST,II
1000  FORMAT(29H AQUEOUS INTERFACE VOLTAGE = ,1PE15.8,
     X17H SYSTEM ENERGY = ,1PE15.8,
     X16H LOOP VOLTAGE = ,1PE15.8,
     X4H IN ,I3,12H ITERATIONS.)
C      AND TRY THE NEXT
100   CONTINUE
      WRITE(1,1001)
      WRITE(4,1001)
1001  FORMAT(1X,125(1H*))
C      END OF LOOP. IF ANY SENSIBLE SOLUTIONS FOUND, SUBROUTINE
C      ENERGY WILL HAVE SET ISENSE
      IF(ISENSE.EQ.0)CALL PANIC(4)
C      NOE RELOAD BOUNDARY CONDITION COMMON BLOCKS
      CALL RELOAD
C      SWITCH OFF CHECKPOINT ROUTINE
      ICHECK=0
C      AND PLOT THE LUCKY WINNER
      CALL PROFIL
      RETURN
      END
C
C******
C
C
      SUBROUTINE CLOSLP(IADR,FC,II)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB04/ACC1,ACC2,IFLAG
      COMMON/CB06/C1,C2,C3,C4,C5,C6,C7,VINV,EINV,VSTART,VEND
      COMMON/CB07/PHIS,VI,PSIL,VA,VALOX,VGATE,VSIOX
      COMMON/CB11/VSL(100,10),ESL(100,10),QSL(100,10),XSL(100),LIMSL,
     XXSLLOC,XMAXSL
      COMMON/CB12/VSI(100,10),ESI(100,10),QSI(100,10),XSI(100),LIMSI,
     XXSILOC,XMAXSI
      COMMON/CB14/ICHECK
      COMMON/CB15/IPTR,POSSVA(2,100),LPOSVA
      COMMON/CB25/ITHICK
      LOGICAL CKACC
C      ROUTINE TO CALCULATE BOUNDARY CONDITIONS FOR EACH INTERFACE
C      WHEN ACCURACY > ACC1.
C      SET ALL X COORDINATES TO 0.0 AS FUNCTIONS CALLED ARE
C      USED TO CALCULATE BULK VOLTAGES AS WELL AS THOSE AT THE
C      INTERFACE
C      IADR CONTAINS THE ADDRESS IN POSSVA OF THE TWO VOLTAGES
C      TO BE USED AS START POINTS FOR THE SOLUTION.
C      FC CONTAINS THE CLOSED LOOP VOLTAGE FOR SUBROUTINE DOASUM
C      II CONTAINS THE NUMBER OF ITERATIONS IT TOOK TO CLOSE
C      THE LOOP
C      SWITCH OFF CHECKPOINT ROUTINE
      ICHECK=0
      XSLLOC=0.0
      XSILOC=0.0
C      UNLOAD START AND END VOLTAGES FROM LIST SENT BY SUBROUTINE DOASUM
      V1=POSSVA(1,IADR)
      V2=POSSVA(2,IADR)
      FV1=F(V1)
      FV2=F(V2)
      CALL CK(64,FV1,'FV1   ','CLOSLP')
      CALL CK(65,FV2,'FV2   ','CLOSLP')
C      IF WE'RE USING THE THICK LAYER CKPLOT ALGORITHM,
C      RETURN DIRECT AS THE ANSWERS ALREADY CLOSE ENOUGH
      FC=FV1
      VA=V1
      II=0
      IF(ITHICK.EQ.1)RETURN
C      MAKE SURE START POINTS ARE SENSIBLE - PANIC IF NOT
      IF(S(FV1).EQ.S(FV2))CALL PANIC(11)
C      START ITERATION
      DO 100 I=1,32000
C      SAVE CONTROL PARAMETER
      II=I
C      IF WE'VE MEARLY FINISHED, SWITCH ON CHECKPOINT ROUTINE
      IF(I.GE.37)ICHECK=1
      ICHECK=0
      CALL CK(-1,FI,'******','******')
      FI=FLOAT(I)
      CALL CK(1 ,FI,'I     ','CLOSLP')
      CALL CK(2 ,V1    ,'V1    ','CLOSLP')
      CALL CK(3 ,V2    ,'V2    ','CLOSLP')
C      BISECT INTERVAL
      VA=(V1+V2)/2.0
      CALL CK(4 ,VA    ,'VA    ','CLOSLP')
C      SAVE VOLTAGE IN NON-COMMON VARIABLE
      VN=VA
C      IF REQUIRED ACCURACY ACHIEVED, JUMP OUT OF LOOP
      IF(CKACC(V1,V2,VA,ACC1))RETURN
      CALL CK(5 ,VA    ,'      ','CLOSLP')
C      NO, SO CALCULATE F(VN) AND ADJUST INTERVAL ACCORDINGLY
      FC=F(VN)
      CALL CK(6 ,FC    ,'FC    ','CLOSLP')
      SFC=S(FC)
      SFV1=S(FV1)
      SFV2=S(FV2)
      IF(SFC.EQ.SFV1)V1=VA
      IF(SFC.EQ.SFV1)FV1=FC
      IF(SFC.EQ.SFV2)V2=VA
      IF(SFC.EQ.SFV2)FV2=FC
C      INSURANCE AGAINST BEING LUCKY
      IF(FC.EQ.0.0)RETURN
C      AND TRY AGAIN
100   CONTINUE
C      NEVER HERE
      CALL PANIC(1)
      RETURN
C      OK, SO VA CONTAINS VOLTAGE VALUE FOR WHICH KVL IS TRUE.
C      IN THE SYSTEM
C      EQUATION F(VA) = 0.0 IS SOLVED USING BISECTION METHOD, WITH
C      INITIAL VALUES VSTART AND 0.0. ITERATIONS TERMINATED
C      ALL REQUIRED BOUNDARY CONDITIONS ARE IN COMMON, SET BY
C      FUNCTION F.
      END
C
C******
C
C
      LOGICAL FUNCTION CKACC(V1,V2,VA,ACC)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      LOGICAL ABSACC
C      FUNCTION TO RETURN WHETHER V1 AND V2 ARE WITHIN A SPECIFIED
C      ACCURACY, (ACC) OF VA
C      FUNCTION RETURNS .TRUE. IF ACCURACY OK.
      BL=1.0D-73
C      IF VA IS SO SMALL THAT DIVISOR WOULD CAUSE ZERO DIVIDE,
C      USE ABSOLUTE VALUE OF INTERVAL AS ACCURACY CRITERIA
      IF(ABS(VA).LT.BL)CKACC=ABSACC(V1,V2,ACC,BL)
      IF(ABS(VA).LT.BL)RETURN
C      NO, SO WE CAN NOW USE CONVENTIONAL CRITERIA
      CKACC=.FALSE.
      IF(ABS((V1-V2)/VA).LT.ACC)CKACC=.TRUE.
      RETURN
      END
C
C******
C
C
      LOGICAL FUNCTION ABSACC(V1,V2,ACC,BL)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
C      FUNCTION TO RETURN WHETHER OR NOT V1 AND V2 ARE WITHIN A
C      SPECIFIED ACCURACY, (ACC) OF EACH OTHER. THE ABSOLUTE
C      VALUES ARE TOO SMALL TO USE CONVENTIONAL CRITERIA.
C      FUNCTION RETURNS .TRUE. IF ACCURACY OK.
      ABSACC=.FALSE.
      VX=V1
      IF(V2.GT.BL)VX=V2
C      THIS HOPEFULLY GIVES A DIVISOR NE 0.0
      IF(ABS((V1-V2)/VX).LT.ACC)ABSACC=.TRUE.
      RETURN
      END
C
C******
C
C
      FUNCTION F(VN)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB01/DCSL(10),BETA(10),SNA(10),C0(10),X0ALO(10),
     XX0SIO(10),D(10),VB(10),CM0(10),SND(10)
      COMMON/CB04/ACC1,ACC2,IFLAG
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
      COMMON/CB07/PHIS,VI,PSIL,VA,VALOX,VGATE,VSIOX
      COMMON/CB08/EA,EPD,B,EXPBV,EP0,ES,EALOX,ESIOX
C      THIS FUNCTION RETURNS THE LOOP VOLTAGE OF THE SYSTEM AS A
C      FUNCTION OF THE VOLTAGE DROP ACROSS THE AQUEOUS PHASE.
C      THE BOUNDARY VALUES CALCULATED ARE ONLY PHYSICALLY MEANINGFUL
C      WHEN F(VN) = 0.0
      CALL CK(61,VN,'VN    ','F     ')
C      SAVE EXPONENT OF ARGUMENT TO OBVIATE MULTIPLE RECALCULATION LATER.
      EXPBV=ADBEXP(-BETA(ISET)*VN)
      CALL CK(7 ,EXPBV,'EXPBV ','F     ')
C      CALCULATE FIELDS AT SOLUTION INTERFACE
      CALL GETEA(VN)
      CALL CK(8 ,EA    ,'EA    ','F     ')
C      CALCULATE DUMMY FIELD B
      CALL GETB
      CALL CK(9 ,B     ,'B     ','F     ')
      FIFLAG=FLOAT(IFLAG)
      CALL CK(10,FIFLAG,'IFLAG ','F     ')
C      CALCULATE VOLTAGE DROP ACROSS SURFACE LAYER
C      EXPRESSION TAKES 1 OF 2 FORMS,
C      DEPENDING ON A FLAG SET BY S/R GETB
      IF(IFLAG.EQ.0)CALL GPSIL0
      IF(IFLAG.NE.0)CALL GPSIL1
      CALL CK(14,PSIL  ,'PSIL  ','F     ')
C      CALCULATE FIELDS AT SURFACE LAYER/AL2O3 INTERFACE
      CALL GETEP0
      CALL CK(11,EP0   ,'EP0   ','F     ')
C      CALCULATE SI SURFACE POTENTIAL
      CALL GETPHI
      CALL CK(12,PHIS  ,'PHIS  ','F     ')
C      CALCULATE VOLTAGE DROP ACROSS INSULATOR
      CALL GETVI
      CALL CK(13,VI    ,'VI    ','F     ')
C      STARTING IN BULK SI, CALCULATE LOOP VOLTAGE
      F=PSIL+VN+VB(ISET)-PHIS-VI
      CALL CK(15,F     ,'F     ','F     ')
      RETURN
      END
C
C******
C
C
      SUBROUTINE GETB
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB04/ACC1,ACC2,IFLAG
      COMMON/CB06/C1,C2,C3,C4,C5,C6,C7,VINV,EINV,VSTART,VEND
      COMMON/CB08/EA,EPD,B,EXPBV,EP0,ES,EALOX,ESIOX
C      ROUTINE TO CALCULATE DUMMY MFIELD USED DURING CALCULATION
C      OF PSIL. EXPRESSION FOR PSIL IS 1 OF 2 FORMS,
C      DEPENDING ON VALUE OF FLAG SET BY THIS ROUTINE.
      B=(EPD*EPD)-(C4*EXPBV)
      IFLAG=0
      IF(B.GT.0.0)IFLAG=1
      FIFLAG=FLOAT(IFLAG)
      CALL CK(18,FIFLAG,'IFLAG ','GETB  ')
      B=SQRT(ABS(B))
      CALL CK(19,B     ,'B     ','GETB  ')
      RETURN
      END
C
C******
C
C
      SUBROUTINE GPSIL0
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB01/DCSL(10),BETA(10),SNA(10),C0(10),X0ALO(10),
     XX0SIO(10),D(10),VB(10),CM0(10),SND(10)
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
      COMMON/CB07/PHIS,VI,PSIL,VA,VALOX,VGATE,VSIOX
      COMMON/CB08/EA,EPD,B,EXPBV,EP0,ES,EALOX,ESIOX
      COMMON/CB11/VSL(100,10),ESL(100,10),QSL(100,10),XSL(100),LIMSL,
     XXSLLOC,XMAXSL
      COMMON/CB13/C8,C9,C10,C11,C12,C13,C14,C15,C16,C17,C18,C19,C20,C21
C      ROUTINE TO CALCULATE VOLTAGE DROP ACROSS THE SURFACE LAYER
      S0=B*BETA(ISET)*(XSLLOC-D(ISET))/2.0
      CALL CK(20,S0    ,'S0    ','GPSIL0')
      S1=EPD/B
      CALL CK(21,S1    ,'S1    ','GPSIL0')
      CS0=COS(S0)
      CALL CK(22,CS0   ,'CS0   ','GPSIL0')
      SS0=SIN(S0)
      CALL CK(24,SS0   ,'SS0   ','GPSIL0')
      P1=CS0-(S1*SS0)
      CALL CK(23,P1    ,'P1    ','GPSIL0')
      PSIL=C8*LOG(ABS(P1))
      CALL CK(26,PSIL  ,'PSIL  ','GPSIL0')
      RETURN
      END
C
C******
C
C
      SUBROUTINE GPSIL1
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB01/DCSL(10),BETA(10),SNA(10),C0(10),X0ALO(10),
     XX0SIO(10),D(10),VB(10),CM0(10),SND(10)
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
      COMMON/CB07/PHIS,VI,PSIL,VA,VALOX,VGATE,VSIOX
      COMMON/CB08/EA,EPD,B,EXPBV,EP0,ES,EALOX,ESIOX
      COMMON/CB11/VSL(100,10),ESL(100,10),QSL(100,10),XSL(100),LIMSL,
     XXSLLOC,XMAXSL
      COMMON/CB13/C8,C9,C10,C11,C12,C13,C14,C15,C16,C17,C18,C19,C20,C21
C      ROUTINE TO CALCULATE VOLTAGE ACROSS SURFACE LAYER
C      AS EXP(150) IS LOTS AND LOTS, THERE ARE THREE
C      DIFFERENT EXPRESIONS THAT CAN BE COMPUTED, ONE
C      FOR EACH OF THE THREECREGIONS
C      S0 < -150,
C      S0 > +150,
C      -150 < S0 < +150
C
      S0=B*BETA(ISET)*(D(ISET)-XSLLOC)/2.0
      CALL CK(66,S0    ,'S0    ','GPSIL1')
      S1=EPD/B
      CALL CK(67,S1    ,'S1    ','GPSIL1')
C      S0 < -150 :
      SM=S1-1.0
      CALL CK(62,SM,'SM    ','GPSIL1')
      IF(S0.LT.-150)PSIL=C8*(LOG(ABS(SM/2.0))-S0)
      IF(S0.LT.-150)RETURN
C      S0 > +150 :
      SP=S1+1.0
      CALL CK(63,SP,'SP    ','GPSIL1')
      IF(S0.GT.+150)PSIL=C8*(LOG(ABS(SP/2.0))+S0)
      IF(S0.GT.+150)RETURN
C      OK, SO -150 < S0 < +150
      PSIL=C8*LOG(0.5*ABS((SP*ADBEXP(S0))-(SM*ADBEXP(-S0))))
      CALL CK(33,PSIL  ,'PSIL  ','GPSIL1')
      RETURN
      END
C
C******
C
C
      FUNCTION S(X)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
C      FUNCTION TO RETURN THE SIGN OF ITS ARGUMENT
      S=0.0
      IF(X.LT.0.0)S=-1.0
      IF(X.GT.0.0)S=+1.0
      RETURN
      END
C
C******
C
C
      SUBROUTINE GETEP0
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB01/DCSL(10),BETA(10),SNA(10),C0(10),X0ALO(10),
     XX0SIO(10),D(10),VB(10),CM0(10),SND(10)
      COMMON/CB04/ACC1,ACC2,IFLAG
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
      COMMON/CB06/C1,C2,C3,C4,C5,C6,C7,VINV,EINV,VSTART,VEND
      COMMON/CB07/PHIS,VI,PSIL,VA,VALOX,VGATE,VSIOX
      COMMON/CB08/EA,EPD,B,EXPBV,EP0,ES,EALOX,ESIOX
C      ROUTINE TO CALCULATE FIELDS AT SURFACE LAYER/INSULATOR INTERFACE
C      SIGN IS CALCULATED FROM DERIVATIVE INFORMATION, SO WE NEED THE
C      POSITION DEFINED. GETEP0 IS A BOUNDARY CALCULATION ROUTINE, SO
C      ARGUMENT OF SIGN FUNCTION ( = X ) IS SET TO 0.0
      IF(IFLAG.EQ.0)EP0=ESURF0(0.0)
      IF(IFLAG.NE.0)EP0=ESURF1(0.0)
      CALL CK(34,EP0   ,'EP0   ','GETEP0')
      RETURN
      END
C
C******
C
C
      SUBROUTINE GETPHI
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB01/DCSL(10),BETA(10),SNA(10),C0(10),X0ALO(10),
     XX0SIO(10),D(10),VB(10),CM0(10),SND(10)
      COMMON/CB02/Q,DC0,DCSI,DCALO,DCSIO,CCI,DCAQ0
      COMMON/CB04/ACC1,ACC2,IFLAG
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
      COMMON/CB06/C1,C2,C3,C4,C5,C6,C7,VINV,EINV,VSTART,VEND
      COMMON/CB07/PHIS,VI,PSIL,VA,VALOX,VGATE,VSIOX
      COMMON/CB08/EA,EPD,B,EXPBV,EP0,ES,EALOX,ESIOX
      COMMON/CB14/ICHECK
C      ROUTINE TO CALCULATE SURFACE POTENTIAL OF SILICON, GIVEN FIELD.
C      CALCULATE SURFACE FIELD
      ES=EP0*DCSL(ISET)/DCSI
      CALL CK(35,ES    ,'ES    ','GETPHI')
C      THE EQUATION G(PHIS) = 0.0 IS SOLVED USING FALSE POSITION,
C      WITH INITIAL VALUES OF 0.0 AND VB(ISET). ITERATION TERMINATED
C      WHEN ACCURACY > ACC2
C      SET UP INITIAL CONDITIONS
      V1=0.0
      V2=2.0*VINV
      G1=G(V1)
      CALL CK(36,G1    ,'G1    ','GETPHI')
      G2=G(V2)
      CALL CK(37,G2    ,'G2    ','GETPHI')
C      IF THE SURFACE FIELD SUPPLIED TO START THE ITERATION IS
C      MUCH HIGHER THAN THE INVERSION SURFACE FIELD, DON'T
C      BOTHER TO CALCULATE PHIS, JUST SET IT TO 2*VINV, AND SPLIT
      PHIS=2.0*VINV
      IF(ABS(ES).GT.ABS(10.0*EINV))RETURN
      CALL CK(58,PHIS,'      ','GETPHI')
C      IF THE START POINTS OF THE ITERATION ARE
C      OF THE SAME SIGN, SOMEONE HATH BLUNDERED
      IF(S(G1).EQ.S(G2))RETURN
      GO=G1
      GN=0.0
C      START ITERATIONS
      DO 100 I=1,32000
      CALL CK(-2,FI,'++++++','++++++')
      FI=FLOAT(I)
      CALL CK(38,FI    ,'I     ','GETPHI')
C      SEE AT WHICH END OF THE INTERVAL DOES THE FUNCTION NEED TO BE
C      RE-EVALUATED (NOTE NOT AT ALL THE FIRST TIME ROUND)
      IF(S(GN).EQ.S(G1))G1=G(V1)
      IF(S(GN).EQ.S(G2))G2=G(V2)
      CALL CK(40,G1    ,'G1    ','GETPHI')
      CALL CK(41,G2    ,'G2    ','GETPHI')
C      CALCULATE NEW VOLTAGE VALUE
      PHIS=((V2*G1)-(V1*G2))/(G1-G2)
      CALL CK(39,PHIS  ,'PHIS  ','GETPHI')
C      CALCULATE NEW G-VALUE
      GN=G(PHIS)
      CALL CK(42,GN    ,'GN    ','GETPHI')
C      THROW AWAY THE OLD POINT THAT IS ON THE SAME SIDE OF THE AXIS
C      AS THE NEW ONE
      IF(S(GN).EQ.S(G1))V1=PHIS
      IF(S(GN).EQ.S(G2))V2=PHIS
      CALL CK(43,V1    ,'V1    ','GETPHI')
      CALL CK(44,V2    ,'V2    ','GETPHI')
C      IF ACCURACY OK, THEN SPLIT
      IF(ABS((GN-GO)/GN).LT.ACC2)RETURN
C      NO, SO SAVE OLD VALUE
      GO=GN
      CALL CK(45,GO    ,'GO    ','GETPHI')
C      AND TRY AGAIN
100   CONTINUE
C      NEVER HERE
      CALL PANIC(5)
      RETURN
      END
C
C******
C
C
      FUNCTION G(V)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB01/DCSL(10),BETA(10),SNA(10),C0(10),X0ALO(10),
     XX0SIO(10),D(10),VB(10),CM0(10),SND(10)
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
      COMMON/CB06/C1,C2,C3,C4,C5,C6,C7,VINV,EINV,VSTART,VEND
      COMMON/CB08/EA,EPD,B,EXPBV,EP0,ES,EALOX,ESIOX
C      THIS FUNCTION REPRESENTS THE RELATION BETWEEN THE SURFACE FIELD
C      IN THE SILICON AND THE SURFACE POTENTIAL. WE REQUIRE THE
C      POTENTIAL AS A FUNCTION OF THE FIELD, SO THE RELATION HAS
C      TO BE INVERTED NUMERICALLY, THE CORRECT SOLUTION
C      BEING GIVEN BY G(V) = 0.0
      A1=BETA(ISET)*V
      CALL CK(46,A1    ,'A1    ','G     ')
      G=ES+(C5*H(A1,C6))
      CALL CK(47,G     ,'G     ','G     ')
C      WHERE H(A,B) IS THE FUNCTION DEFINED BY SZE, P431
      RETURN
      END
C
C******
C
C
      FUNCTION H(A1,A2)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
C      FUNCTION USED TO CALCULATE SURFACE FIELD AS A FUNCTION OF
C      POTENTIAL IN SILICON
      EXPA1=ADBEXP(A1)
      CALL CK(48,EXPA1 ,'EXPA1 ','H     ')
      H1=(1.0/EXPA1) +A1-1.0
      CALL CK(49,H1    ,'H1    ','H     ')
      H2=A2*(EXPA1-A1-1.0)
      CALL CK(50,H2    ,'H2    ','H     ')
      H=H1+H2
      CALL CK(51,H     ,'H     ','H     ')
      IF(H.LT.0.0)CALL PANIC(6)
      H=SQRT(H)
      RETURN
      END
C
C******
C
C
      FUNCTION ADBEXP(X)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
C      FUNCTION TO CALCULATE EXONENT OF ARGUMENT, WITHOUT
C      FORCING 2970 ERROR HANDLER PROCEDURE IF
C      OVERFLOW OR UNDERFLOW IMMENANT
C      OVERFLOW:
      IF(X.GT.174.6)CALL PANIC(9)
C      UNDERFLOW:
      IF(X.LT.-180.2)ADBEXP=0.0
      IF(X.LT.-180.2)RETURN
C      NO, SO CARRY ON
      ADBEXP=EXP(X)
      RETURN
      END
C
C******
C
C
      SUBROUTINE GETVI
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB01/DCSL(10),BETA(10),SNA(10),C0(10),X0ALO(10),
     XX0SIO(10),D(10),VB(10),CM0(10),SND(10)
      COMMON/CB02/Q,DC0,DCSI,DCALO,DCSIO,CCI,DCAQ0
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
      COMMON/CB07/PHIS,VI,PSIL,VA,VALOX,VGATE,VSIOX
      COMMON/CB08/EA,EPD,B,EXPBV,EP0,ES,EALOX,ESIOX
C      ROUTINE TO CALCULATE VOLTAGE DROP ACROSS INSULATOT
C      CALCULATE FIELD IN AL2O3
      EALOX=EP0*DCSL(ISET)/DCALO
      CALL CK(52,EALOX ,'EALOX ','GETVI ')
C      VOLTAGE DROP ACROSS AL2O3
      VALOX=-EALOX*X0ALO(ISET)
      CALL CK(53,VALOX ,'VALOX ','GETVI ')
C      FIELD IN SIO2
      ESIOX=ES*DCSIO/DCSI
      CALL CK(54,ESIOX ,'ESIOX ','GETVI ')
C      VOLTAGE DROP ACROSS SIO2
      VSIOX=-ESIOX*X0SIO(ISET)
      CALL CK(55,VSIOX ,'VSIOX ','GETVI ')
C      GATE VOLTAGE
      VGATE=VSIOX+PHIS
      CALL CK(56,VGATE ,'VGATE ','GETVI ')
C      VOLTAGE DROP ACROSS INSULATOR
      VI=VALOX+VSIOX
      CALL CK(57,VI    ,'VI    ','GETVI ')
      RETURN
      END
C
C******
C
C
      SUBROUTINE PROFIL
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
C      ROUTINE TO CALCULATE CHARGE, VOLTAGE AND FIELD PROFILES.
C      BOUNDARY CONDITIONS PREVIOUSLY SET BY S/R CLOSLP
C      AQUEOUS PHASE
      CALL AQPROF
C      SURFACE LAYER
      CALL SLPROF
C      SILICON
      CALL SIPROF
      RETURN
      END
C
C******
C
C
      SUBROUTINE GETEA(VN)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB01/DCSL(10),BETA(10),SNA(10),C0(10),X0ALO(10),
     XX0SIO(10),D(10),VB(10),CM0(10),SND(10)
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
      COMMON/CB06/C1,C2,C3,C4,C5,C6,C7,VINV,EINV,VSTART,VEND
      COMMON/CB07/PHIS,VI,PSIL,VA,VALOX,VGATE,VSIOX
      COMMON/CB08/EA,EPD,B,EXPBV,EP0,ES,EALOX,ESO
C      ROUTINE TO CALCULATE FIELDS AT THE AQUEOUS/SURFACE LAYER INTERFACE
      EA=C1*SINH(BETA(ISET)*VN/2.0)
      EPD=C2*EA
      CALL CK(16,EA    ,'EA    ','GETEA ')
      CALL CK(17,EPD   ,'EPD   ','GETEA ')
      RETURN
      END
C
C******
C
C
      SUBROUTINE AQPROF
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB01/DCSL(10),BETA(10),SNA(10),C0(10),X0ALO(10),
     XX0SIO(10),D(10),VB(10),CM0(10),SND(10)
      COMMON/CB02/Q,DC0,DCSI,DCALO,DCSIO,CCI,DCAQ0
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
      COMMON/CB06/C1,C2,C3,C4,C5,C6,C7,VINV,EINV,VSTART,VEND
      COMMON/CB07/PHIS,VI,PSIL,VA,VALOX,VGATE,VSIOX
      COMMON/CB10/VAQ(100,10),EAQ(100,10),QAQ(100,10),XAQ(100),LIMAQ
      COMMON/CB13/C8,C9,C10,C11,C12,C13,C14,C15,C16,C17,C18,C19,C20,C21
      COMMON/CB23/DCSLMN,BETAMN,SNAMN,C0MN,X0ALMN,X0SIMN,DMN,
     XVBMN,CM0MN,SNDMN
C      ROUTINE TO CALCULATE CHARGE DENSITY, ELECTRIC FIELD AND
C      VOLTAGE PROFILES IN THE AQUEOUS PHASE, GIVEN THE BOUNDARY
C      CONDITION VA ESTABLISHED BY SUBROUTINE CLOSLP
C      MINIMUM DISTANCE INTO AQUEOUS PHASE BEFORE
C      PROFILES DECAY - SEE NOTES 'COMPUTATIONAL BODGES I'
      XMAXAQ=C14
      XINC=XMAXAQ/FLOAT(LIMAQ)
C      CALCULATE HORRIBLE CONSTANT
      T=BETA(ISET)*VA/4.0
      T=TANH(T)
C      SET UP LOOP TO CALCULATE VOLTAGE, FIELD AND CHARGE
C      PROFILES, AND STORE THEM
      DO 100 I=1,LIMAQ
C      CALCULATE X POSITION
      X=FLOAT(I-1)*XINC
      C7X=C7*X
      TVAQC8=GVAQC8(C7X,T)
C      VOLTAGE
      VAQ(I,ISET)=TVAQC8
C      FIELD
      EAQ(I,ISET)=C1*SINH((BETA(ISET)*TVAQC8)/2.0)
C      CHARGE DENSITY
      QAQ(I,ISET)=C10*SINH(BETA(ISET)*TVAQC8)
C      ABSCISSA
C      IF FIRST TIME ROUND, LOAD ABSCISSA ARRAY
      IF(ISET.EQ.1)XAQ(I)=X
100   CONTINUE
C      SO ALL PROFILES NICELY TUCKED UP IN DATA ARRAYS
      RETURN
      END
C
C******
C
C
      FUNCTION GVAQC8(X,T)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB13/C8,C9,C10,C11,C12,C13,C14,C15,C16,C17,C18,C19,C20,C21
C      FUNCTION TO RETURN THE VOLTAGE AS A FUNCTION OF
C      DISTANCE IN THE AQUEOUS PHASE
C      FULL EXPRESSION IS GIVEN BY EQN 1.8 OF NOTES
C      IF EXP(X) >> T, SIMPLIFIED EXPRESSION POSSIBLE
C      IE IF X >> LN (1.0E17) * T, SIMPLIFIED .....
C      LN(1.0E17) = 39.143945
      DATA FF/39.143945/
      GVAQC8=0.0
      IF(T.EQ.0.0D0)RETURN
      IF(X.GT.(FF+LOG(ABS(T))))RETURN
C      NO, SO USE FULL EXPRESSION
      EXPX=ADBEXP(X)
      GVAQC8=C8*LOG((EXPX+T)/(EXPX-T))
      RETURN
      END
C
C******
C
C
      SUBROUTINE AQENER
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB01/DCSL(10),BETA(10),SNA(10),C0(10),X0ALO(10),
     XX0SIO(10),D(10),VB(10),CM0(10),SND(10)
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
      COMMON/CB07/PHIS,VI,PSIL,VA,VALOX,VGATE,VSIOX
      COMMON/CB13/C8,C9,C10,C11,C12,C13,C14,C15,C16,C17,C18,C19,C20,C21
      COMMON/CB17/TOTUAQ,TOTUSL,TOTUSI,UMIN,UTOT
C      ROUTINE TO CALCULATE THE TOTAL ELECTROSTATIC ENERGY
C      IN THE AQUEOUS PHASE AS A FUNCTION OF THE INTERFACE VOLTAGE, VA.
      S=BETA(ISET)*VA/4.0
      S=SINH(S)
      TOTUAQ=C11*S*S
      RETURN
      END
C
C******
C
C
      SUBROUTINE UPDATE(V,VOLD)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB15/IPTR,POSSVA(2,100),LPOSVA
      COMMON/CB25/ITHICK
C      ROUTINE CALLED TO STORE STRADDLING VOLTAGE VALUES
C      WHEN FOUND BY SUBROUTINE CKPLOT ON INITIAL
C      SOLUTION SCAN
C
C  **  THIN LAYER VERSION  **
C
C      UNSET THICK LAYER FLAG
      ITHICK=0
C      UPDATE POINTER
      IPTR=IPTR+1
C      IF STORE OVERFLOW, BLEAT
      IF(IPTR.GT.LPOSVA)CALL PANIC(12)
C      TRY AND STORE VOLTAGE VALUES
      POSSVA(1,IPTR)=VOLD
      POSSVA(2,IPTR)=V
      RETURN
      END
C
C******
C
C
      SUBROUTINE UPDATE(V,VOLD)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
      COMMON/CB15/IPTR,POSSVA(2,100),LPOSVA
      COMMON/CB25/ITHICK
      DATA NTRIES/8/
      DATA WIDTH/10.0/
C      NOTE TIS *WIDTH* MUST BE THE SAME AS IN SUBROUTINE SCAN
C      ROUTINE CALLED WHEN THE FIRST (IE MOST POSITIVE)
C      STRADDLING VOLTAGE FOUND BY SUBROUTINE CKPLOT ON INITIAL
C      SOLUTION SCAN
C      ALGORITHM VERY SNEAKY - SEE NOTES
C
C  **  THICK LAYER VERSION  **
C
C      SET THICK LAYER FLAG
      ITHICK=1
C      RETURN DIRECT IF NOT FIRST PAIR
      IF(IPTR.EQ.1)RETURN
C      OK, SO INCREMENT POINTER
      IPTR=IPTR+1
C      UNLOAD STRADDLING VOLTAGES INTO LOCAL VARIABLES
      V1=V
      V2=V+(WIDTH*(VOLD-V))
C      (IE V2 IS *WIDTH* TIMES AS FAR AWAY FROM V1 AS IS VOLD)
C      HAVE SEVERAL ATTEMPTS AT THE SOLUTION (EACH ATTEMPT
C      INCREAESES THE RESOLUTION BY A FACTOR OF (NSTEP/WIDTH)
C      (NSTEP - GLOBAL VARIABLE)
      DO 100 I=1,NTRIES
      CALL SCAN(V1,V2)
C      REPORT STRADDLE VOLTAGES
      WRITE(1,1000)I,V1,V2
      WRITE(4,1000)I,V1,V2
1000  FORMAT(13H LOOP NUMBER ,I3,12H  LOWER V : ,1PE23.16,
     X12H  UPPER V : ,1PE23.16)
100   CONTINUE
C      ITS ALL OVER - LOAD STRADDLING VOLTAGE VECTOR
      POSSVA(1,IPTR)=V2
      POSSVA(2,IPTR)=V1
      RETURN
      END
C
C******
C
C
      SUBROUTINE SCAN(V1,V2)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
      DATA WIDTH/10.0/
C      NOTE THIS *WIDTH* MUST BE THE SAME AS IN SUBROUTINE UPDATE
C      INPUT TO ROUTINE IS A VOLTAGE WINDOW, (V1,V2), WHICH
C      STRADDLES AT LEAST ONE SOLUTION
C      THIS ROUTINE CREATES A SMALLER WINDOW THAT MOVES WITHIN
C      (V1,V2) FROM THE MOST POSITIVE END TOWARDS THE MOST NEGATIVE END.
C      THE WINDOE IS OF WIDTH (WIDTH*ABS(V1-V2)/NSTEP) .
C      THE FIRST TIME THIS LOCAL WINDOW FINDS A ZERO CROSSING,
C      THE OUTER WINDOW EDGES ARE SET TO THE INNER,
C      AND THE ROUTINE EXITS
C      GET THE SIGN OF THE FUNCTION AT THE MOST POSITIVE
C      WINDOW EXTREMUM
      FVOLD=F(V2)
      SFVOLD=S(FVOLD)
C      CALCULATE STEP SIZE
      VSTEP=ABS(V1-V2)/FLOAT(NSTEP)
C      CALCULATE LOCAL WINDOW WIDTH (IN VOLTS)
      VWIDTH=WIDTH*VSTEP
C      SET UP LOOP TO MOVE WINDOW
      NSTEP2=NSTEP+2
      DO 100 I=1,NSTEP2
C      LOWER LOCAL VOLTAGE LIMIT
      VL=V2-(FLOAT(I)*VSTEP)
C      UPPER LIMIT
      VU=DMIN1(V2,(VL+VWIDTH))
C      (SO THAT VU IS NEVER GREATER THAN THE MOST POSITIVE
C      OUTER WINDOW LIMIT)
C      SIGN OF FUNCTION AT LOWER LOCAL WINDOW EDGE
      FVL=F(VL)
      SFVL=S(FVL)
C      IF WE'VE CROSSED A ZERO, TIME TO GO
      IF(SFVL.NE.SFVOLD)GOTO 20
C      NO, SO STORE OLD SIGN
      SFVOLD=SFVL
100   CONTINUE
C      IF HERE, WE'VE DROPPED OUT OF THE LOOP.
C      THIS ONLY OCCOURS IF V1=V2, COS WE RAN OUT OF
C      SIGNIFICANT DIGITS
C      BLEAT
      WRITE(1,1000)V1,V2
      WRITE(4,1000)V1,V2
1000  FORMAT(17H ALGORITHM FAILED/6H V1 = ,1PE42.35/6H V2 = ,1PE42.35/
     X32H INSUFFICIENT SIGNIFICANT DIGITS)
20    CONTINUE
C      OK, RELOAD ROUTINE ARGUMENTS WITH INNER VOLTAGE WINDOW VALUES
      V2=VU
      V1=VL
      RETURN
      END
C
C******
C
C
      SUBROUTINE SETPHY
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB02/Q,DC0,DCSI,DCALO,DCSIO,CCI,DCAQ0
C      ROUTINE TO SET UP PHYSICAL CONSTANTS USED IN CALCULATION
C      (SI UNITS THROUGHOUT)
C      ELECTRONIC CHARGE
      Q=1.6E-19
C      DIELECTRIC CONSTANT OF FREE SPACE
      DC0=8.86E-12
C      DIELECTRIC CONSTANT OF SILICON
      DCSI=11.7
C      DIELECTRIC CONSTANT OF ALUMINIUM OXIDE
      DCALO=3.0
C      DIELECTRIC CONSTANT OF SIO2
      DCSIO=3.9
C      INTRINSIC CARRIER CONCENTRATION OF SILIVON
      CCI=1.45E16
C      ZERO FIELD DIELECTRIC CONSTANT OF PURE WATER
      DCAQ0=80.0
      RETURN
      END
C
C******
C
C
      SUBROUTINE SETPAR
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
C      ROUTINE TO SET UP PARAMETER ARRAYS
C      SURFACE LAYER DIELECTRIC CONSTANT
      CALL SETDCS
C      BIAS VOLTAGE
      CALL SETVB
C      SURFACE LAYER THICKNESS
      CALL SETD
C      SIO2 THICKNESS
      CALL SETSIO
C      AL2O3 THICKNESS
      CALL SETALO
C      BULK IONIC STRENGTH
      CALL SETC0
C      BULK SPECIFIC ION CONCENTRATION
      CALL SETCM0
C      SILICON ACCEPTOR CONCENTRATION
      CALL SETNA
C      SILICON DONOR CONCENTRATION
      CALL SETND
C      BOLTZMANN VOLTAGE (NB TEMPERATURE DEPENDANT)
      CALL SETBTA
C      CALCULATE MAXIMUM AND MINIMUM VALUES OF EACH PARAMETER
C      AS THEY MAY BE NEEDED BY OUTPUT ROUTINES
      CALL GETLIM
      RETURN
      END
C
C******
C
C
      SUBROUTINE GETLIM
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB01/DCSL(10),BETA(10),SNA(10),C0(10),X0ALO(10),
     XX0SIO(10),D(10),VB(10),CM0(10),SND(10)
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
      COMMON/CB22/DCSLMX,BETAMX,SNAMX,C0MX,X0ALMX,X0SIMX,DMX,
     XVBMX,CM0MX,SNDMX
      COMMON/CB23/DCSLMN,BETAMN,SNAMN,C0MN,X0ALMN,X0SIMN,DMN,
     XVBMN,CM0MN,SNDMN
C      ROUTINE TO CALCULATE MAXIMUM AND MINIMUM VALUES OF EACH PARAMETER
      DCSLMX=DCSL(1)
      DCSLMN=DCSL(1)
      BETAMX=BETA(1)
      BETAMN=BETA(1)
      SNAMX=SNA(1)
      SNAMN=SNA(1)
      C0MX=C0(1)
      C0MN=C0(1)
      X0ALMX=X0ALO(1)
      X0ALMN=X0ALO(1)
      X0SIMX=X0SIO(1)
      X0SIMN=X0SIO(1)
      DMX=D(1)
      DMN=D(1)
      VBMX=VB(1)
      VBMN=VB(1)
      CM0MX=CM0(1)
      CM0MN=CM0(1)
      SNDMX=SND(1)
      SNDMN=SND(1)
C      SET UP LOOP TO CALCULATE MAX AND MIN VALUES
      DO 100 I=1,NSET
      DCSLMX=DMAX1(DCSLMX,DCSL(I))
      DCSLMN=DMIN1(DCSLMN,DCSL(I))
      BETAMX=DMAX1(BETAMX,BETA(I))
      BETAMN=DMIN1(BETAMN,BETA(I))
      SNAMX=DMAX1(SNAMX,SNA(I))
      SNAMN=DMIN1(SNAMN,SNA(I))
      C0MX=DMAX1(C0MX,C0(I))
      C0MN=DMIN1(C0MN,C0(I))
      X0ALMX=DMAX1(X0ALMX,X0ALO(I))
      X0ALMN=DMIN1(X0ALMN,X0ALO(I))
      X0SIMX=DMAX1(X0SIMX,X0SIO(I))
      X0SIMN=DMIN1(X0SIMN,X0SIO(I))
      DMX=DMAX1(DMX,D(I))
      DMN=DMIN1(DMN,D(I))
      VBMX=DMAX1(VBMX,VB(I))
      VBMN=DMIN1(VBMN,VB(I))
      CM0MX=DMAX1(CM0MX,CM0(I))
      CM0MN=DMIN1(CM0MN,CM0(I))
      SNDMX=DMAX1(SNDMX,SND(I))
      SNDMN=DMIN1(SNDMN,SND(I))
100   CONTINUE
      RETURN
      END
C
C******
C
C
      SUBROUTINE SETUP
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB04/ACC1,ACC2,IFLAG
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
      COMMON/CB06/C1,C2,C3,C4,C5,C6,C7,VINV,EINV,VSTART,VEND
      COMMON/CB10/VAQ(100,10),EAQ(100,10),QAQ(100,10),XAQ(100),LIMAQ
      COMMON/CB11/VSL(100,10),ESL(100,10),QSL(100,10),XSL(100),LIMSL,
     XXSLLOC,XMAXSL
      COMMON/CB12/VSI(100,10),ESI(100,10),QSI(100,10),XSI(100),LIMSI,
     XXSILOC,XMAXSI
      COMMON/CB15/IPTR,POSSVA(2,100),LPOSVA
      COMMON/CB22/DCSLMX,BETAMX,SNAMX,C0MX,X0ALMX,X0SIMX,DMX,
     XVBMX,CM0MX,SNDMX
      COMMON/CB23/DCSLMN,BETAMN,SNAMN,C0MN,X0ALMN,X0SIMN,DMN,
     XVBMN,CM0MN,SNDMN
C      ROUTINE TO PERFORM PROGRAM INITIALISATION
C      NUMBER OF CONTOURS TO DRAW
      NSET=10
C      NUMBER OF POINTS ON EACH CHECKPLOT
      NSTEP=2500
C      BODGE ISTEP. IT AIN'T USED, AND IT COCKS UP THE JOURNAL
      ISTEP=0
C      SET UP SIZE OF SOLUTION BUFFER
      LPOSVA=100
C      REQUIRED ACCURACY TO TERMINATE PRIMARY (OUTER)
C      ITERATION TO CLOSE VOLTAGE LOOP
      ACC1=0.001
      ACC1=0.000001
      ACC1=1.0E-8
      ACC1=1.0E-10
      ACC1=1.0E-13
C      REQUIRED ACCURACY TO TERMINATE SECONDARY (INNER)
C      ITERATION TO CLOSE VOLTAGE LOOP
      ACC2=0.001
      ACC2=0.000001
      ACC2=1.0D-8
      ACC2=1.0D-10
      ACC2=1.0D-13
C      SET UP SIZE OF DATA ARRAYS TO HOLF FIELD, VOLTAGE
C      AND CHARGE PROFILES
C      AQEOUS PHASE
      LIMAQ=100
C      SURFACE LAYER
      LIMSL=100
C      SILICON
      LIMSI=100
C      SET UP PHYSICAL CONSTANTS
      CALL SETPHY
C      SET UP PARAMETER LISTS
      CALL SETPAR
C      SET UP OUTPUT GRAPHICS
      CALL SETGRA
C      START VOLTAGE FOR OUTER ITERATION
      VSTART=-0.1
      VSTART=-0.075
      VSTART=-0.2
      VSTART=-0.05
      VSTART=-0.1
      VEND=0.1
      VSTART=-0.01
      VEND=0.01
      VEND=-0.01
      VSTART=0.01
C      WRITE VSTART, VEND AND NUMBER OF CHECKPOINTS TO CHANNEL 2
C      SO THEY CAN BE PICKED UP BY SALVAGE PROGRAM
      WRITE(2,2000)VSTART,VEND,NSTEP
2000  FORMAT(2(1X,1PE15.8),1X,I6)
      RETURN
      END
C
C******
C
C
      SUBROUTINE SETGRA
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB03/LTITLE(11),ITITLE(6,11),Y1,Y2,X1,X2,X3,X4,X5,
     XDASH,SIZE
C      ROUTINE TO INITIALISE GRAPHICS
      DATA ITITLE(1, 1)/4HSILI/,ITITLE(2, 1)/4HCON /
      DATA ITITLE(3, 1)/4H    /,ITITLE(4, 1)/4H    /
      DATA ITITLE(5, 1)/4H    /,ITITLE(6, 1)/4H    /
      DATA ITITLE(1, 2)/4HCOMP/,ITITLE(2, 2)/4HOUND/
      DATA ITITLE(3, 2)/4H INS/,ITITLE(4, 2)/4HULAT/
      DATA ITITLE(5, 2)/4HOR  /,ITITLE(6, 2)/4H    /
      DATA ITITLE(1, 3)/4HSURF/,ITITLE(2, 3)/4HACE /
      DATA ITITLE(3, 3)/4HLAYE/,ITITLE(4, 3)/4HR   /
      DATA ITITLE(5, 3)/4H    /,ITITLE(6, 3)/4H    /
      DATA ITITLE(1, 4)/4HSOLU/,ITITLE(2, 4)/4HTION/
      DATA ITITLE(3, 4)/4H    /,ITITLE(4, 4)/4H    /
      DATA ITITLE(5, 4)/4H    /,ITITLE(6, 4)/4H    /
      DATA ITITLE(1, 5)/4HVOLT/,ITITLE(2, 5)/4HAGE /
      DATA ITITLE(3, 5)/4H(V) /,ITITLE(4, 5)/4H    /
      DATA ITITLE(5, 5)/4H    /,ITITLE(6, 5)/4H    /
      DATA ITITLE(1, 6)/4HELEC/,ITITLE(2, 6)/4HTRIC/
      DATA ITITLE(3, 6)/4H FIE/,ITITLE(4, 6)/4HLD (/
      DATA ITITLE(5, 6)/4HV UM/,ITITLE(6, 6)/4H-1) /
      DATA ITITLE(1, 7)/4HCHAR/,ITITLE(2, 7)/4HGE D/
      DATA ITITLE(3, 7)/4HENSI/,ITITLE(4, 7)/4HTY (/
      DATA ITITLE(5, 7)/4HUC U/,ITITLE(6, 7)/4HM-3)/
      DATA ITITLE(1, 8)/4HMICR/,ITITLE(2, 8)/4HONS /
      DATA ITITLE(3, 8)/4H    /,ITITLE(4, 8)/4H    /
      DATA ITITLE(5, 8)/4H    /,ITITLE(6, 8)/4H    /
      DATA ITITLE(1, 9)/4H    /,ITITLE(2, 9)/4H    /
      DATA ITITLE(3, 9)/4H    /,ITITLE(4, 9)/4H    /
      DATA ITITLE(5, 9)/4H    /,ITITLE(6, 9)/4H    /
      DATA ITITLE(1,10)/4HV(GA/,ITITLE(2,10)/4HTE) /
      DATA ITITLE(3,10)/4H=   /,ITITLE(4,10)/4H    /
      DATA ITITLE(5,10)/4H    /,ITITLE(6,10)/4H    /
      DATA ITITLE(1,11)/4HINVE/,ITITLE(2,11)/4HRSIO/
      DATA ITITLE(3,11)/4HN   /,ITITLE(4,11)/4H    /
      DATA ITITLE(5,11)/4H    /,ITITLE(6,11)/4H    /
      DATA LTITLE/7,18,13,8,11,23,24,7,0,9,9/
C      OPEN GRAPHICS ON CHANNEL 8
      CALL PLOTS(0,0,8)
C      MOVE PEN TO INITIAL POSITION, AND ESTABLISH NEW ORIGIN
      CALL PLOT(5.0,5.0,-3)
C      GRAPH HEIGHT
      Y1=25.0
C      SILICON AXIS
      X1=6.0
C      GATE AXIS
      X2=7.0
C      INSULATOR SURFACE
      X3=8.0
C      AQUEOUS INTERFACE
      X4=23.0
C      TOTAL LENGTH OF PLOT
      X5=38.0
C      HEIGHT OF TITLES ABOVE UPPER AXIS
      Y2=Y1+0.5
C      INVERSION ARROW LENGTH
      LINVAR=1.0
C      LENGTH OF DASHES
      DASH=0.5
C      CHARACTER SIZE
      SIZE=0.5
      RETURN
      END
C
C******
C
C
      FUNCTION GETX(XA,XB,IADR)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB03/LTITLE(11),ITITLE(6,11),Y1,Y2,X1,X2,X3,X4,X5,
     XDASH,SIZE
C      FUNCTION TO RETURN START POSITION OF CHARACTER TITLE
C      CENTERED BETWEEN XA AND XB, AND HELD IN THE ELEMENT
C      IADR OF ITITLE
      GETX=0.5*(XA+XB-(FLOAT(LTITLE(IADR))*SIZE))
      RETURN
      END
C
C******
C
C
      SUBROUTINE SETMTH
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB01/DCSL(10),BETA(10),SNA(10),C0(10),X0ALO(10),
     XX0SIO(10),D(10),VB(10),CM0(10),SND(10)
      COMMON/CB02/Q,DC0,DCSI,DCALO,DCSIO,CCI,DCAQ0
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
      COMMON/CB06/C1,C2,C3,C4,C5,C6,C7,VINV,EINV,VSTART,VEND
      COMMON/CB13/C8,C9,C10,C11,C12,C13,C14,C15,C16,C17,C18,C19,C20,C21
      COMMON/CB17/TOTUAQ,TOTUSL,TOTUSI,UMIN,UTOT
      COMMON/CB22/DCSLMX,BETAMX,SNAMX,C0MX,X0ALMX,X0SIMX,DMX,
     XVBMX,CM0MX,SNDMX
      COMMON/CB23/DCSLMN,BETAMN,SNAMN,C0MN,X0ALMN,X0SIMN,DMN,
     XVBMN,CM0MN,SNDMN
C      ROUTINE TO SET UP MATHEMATICAL CONSTANTS THAT ARE ONLY
C      A FUNCTION OF ISET, TO AVOID MULTIPLE RECALCULATION
C      DURING NUMERICAL ITERATIONS LATER.
C      RESET MINIMUM ENERGY TO ARBITRARILY HIGH VALUE
      UMIN=1.0D74
      C1=(8.0*C0(ISET)*Q)/(BETA(ISET)*DC0*DCAQ0)
      IF(C1.LT.0.0)CALL PANIC(8)
      C1=SQRT(C1)
      C2=DCAQ0/DCSL(ISET)
      C3=(2.0*Q*CM0(ISET))/(DC0*DCSL(ISET))
      C4=(2.0*Q*CM0(ISET))/(DC0*DCSL(ISET)*BETA(ISET))
C      HOLE CONCENTRATION IN SUBSTRATE
      A=SNA(ISET)-SND(ISET)
      CPP0=0.5*(A+SQRT((A*A)+(4.0*CCI*CCI)))
C      SO CONCENTRATION OF ELECTRONS IN SUBSTRATE
      CNP0=(CCI*CCI)/CPP0
C      DEBYE LENGTH
      DEBLEN=(2.0*DCSI)/(Q*CPP0*BETA(ISET))
      DEBLEN=SQRT(DEBLEN)
      C5=2.0/(BETA(ISET)*DEBLEN)
      C6=CNP0/CPP0
C      SILICON SURFACE INVERSION VOLTAGE
      VINV=(2.0/BETA(ISET))*LOG(SNA(ISET)/CCI)
C      CORRESPONDING INVERSION SURFACE FIELD
      EINV=-C5*H(VINV*BETA(ISET),C6)
      C7=SQRT((BETA(ISET)*C0(ISET)*Q)/(2.0*DC0*DCAQ0))
      C8=2.0/BETA(ISET)
      C9=SQRT((8.0*C0(ISET)*Q)/(BETA(ISET)*DC0*DCAQ0))
      C10=-2.0*C0(ISET)*Q
      C11=2.0*C0(ISET)*Q*DC0*DCAQ0/BETA(ISET)
      IF(C11.LT.0.0)CALL PANIC(13)
      C11=(4.0/BETA(ISET))*SQRT(C11)
      C12=(8.0*Q*CM0(ISET))/(BETA(ISET)*BETA(ISET)*DC0*DCSL(ISET))
      C13=Q*CM0(ISET)
C      CALCULATE MAXIMUM DEPLETION WIDTH, MAXIMUM EXCURSION OF
C      INTEREST IN AQUEOUS PHASE, AND MAX SURFACE LAYER WIDTH
C      DISTANCE IN SILICON
C      CALCULATE DISTANCE REQUIRED TO TRAVEL INTO THE BULK
C      SOLUTION BEFORE PROFILES DECAY
C      ATTENUATION FACTOR (IE FACTOR BY WHICH PROFILE DECAYS
C      BEFORE WE LOSE INTEREST)
      AF=100.0
C      SO LONGEST PROFILE IN THE SET:
C      (SEE NOTES 'COMPUTATIONAL BODGES 1')
      XMAXAQ=SQRT((DC0*DCAQ0)/(2.0*C0MN*BETAMN*Q))
      XMAXAQ=XMAXAQ*LOG(AF/4.0)
C      SO X-INCREMENT
      C14=XMAXAQ
      C14=C14*3.0
      C15=SQRT((2.0*DC0*DCSI)/(Q*SNAMN))
C      SURFACE LAYER WIDTH
      C16=DMX
      RETURN
      END
C
C******
C
C
      SUBROUTINE PANIC(JJ)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB01/DCSL(10),BETA(10),SNA(10),C0(10),X0ALO(10),
     XX0SIO(10),D(10),VB(10),CM0(10),SND(10)
      COMMON/CB02/Q,DC0,DCSI,DCALO,DCSIO,CCI,DCAQ0
      COMMON/CB03/LTITLE(11),ITITLE(6,11),Y1,Y2,X1,X2,X3,X4,X5,
     XDASH,SIZE
      COMMON/CB04/ACC1,ACC2,IFLAG
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
      COMMON/CB06/C1,C2,C3,C4,C5,C6,C7,VINV,EINV,VSTART,VEND
      COMMON/CB07/PHIS,VI,PSIL,VA,VALOX,VGATE,VSIOX
      COMMON/CB08/EA,EPD,B,EXPBV,EP0,ES,EALOX,ESIOX
      COMMON/CB09/DUM(20)
      COMMON/CB10/VAQ(100,10),EAQ(100,10),QAQ(100,10),XAQ(100),LIMAQ
      COMMON/CB11/VSL(100,10),ESL(100,10),QSL(100,10),XSL(100),LIMSL,
     XXSLLOC,XMAXSL
      COMMON/CB12/VSI(100,10),ESI(100,10),QSI(100,10),XSI(100),LIMSI,
     XXSILOC,XMAXSI
      COMMON/CB13/C8,C9,C10,C11,C12,C13,C14,C15,C16,C17,C18,C19,C20,C21
      COMMON/CB14/ICHECK
      COMMON/CB15/IPTR,POSSVA(2,100),LPOSVA
      COMMON/CB16/VSTORE(7),ESTORE(8),IBFLAG
      COMMON/CB17/TOTUAQ,TOTUSL,TOTUSI,UMIN,UTOT
      COMMON/CB18/SIXFST,SIYFST,SIXINC,SIYINC
      COMMON/CB19/SLXFST,SLYFST,SLXINC,SLYINC
      COMMON/CB20/AQXFST,AQYFST,AQXINC,AQYINC
      COMMON/CB21/XDAT(102),YDAT(102)
      COMMON/CB22/DCSLMX,BETAMX,SNAMX,C0MX,X0ALMX,X0SIMX,DMX,
     XVBMX,CM0MX,SNDMX
      COMMON/CB23/DCSLMN,BETAMN,SNAMN,C0MN,X0ALMN,X0SIMN,DMN,
     XVBMN,CM0MN,SNDMN
      COMMON/CB24/PSILAR(12),VAAR(12)
      COMMON/CB25/ITHICK
      DIMENSION LABEL(6)
      DATA LABEL(1)/4HVOLT/,LABEL(2)/4HAGE /
      DATA LABEL(3)/4HFIEL/,LABEL(4)/4HD   /
      DATA LABEL(5)/4HCHAR/,LABEL(6)/4HGE  /
      WRITE(1,1000)JJ
1000  FORMAT(///130(1H*)//10X,6H PANIC,6X,I2//)
      IB=1
      WRITE(1,1001)IB
1001  FORMAT(/130(1H-)//8H BLOCK :,3X,I2//)
      WRITE(1,1002)(DCSL(I),BETA(I),SNA(I),C0(I),X0ALO(I),I=1,NSET)
1002  FORMAT(1X,4HDCSL,12X,4HBETA,12X,3HSNA,13X,2HC0,14X,5HX0ALO,11X/
     X10(5(1X,1PE15.8)/))
      WRITE(1,1003)(X0SIO(I),D(I),VB(I),CM0(I),SND(I),I=1,NSET)
1003  FORMAT(1X,5HX0SIO,11X,1HD,15X,2HVB,14X,3HCM0,13X,3HSND,13X/
     X10(5(1X,1PE15.8)/))
      IB=2
      WRITE(1,1001)IB
      WRITE(1,1004)Q,DC0,DCSI,DCALO,DCSIO,CCI,DCAQ0
1004  FORMAT(
     X9H      Q :,1PE15.8/
     X9H    DC0 :,1PE15.8/
     X9H   DCSI :,1PE15.8/
     X9H  DCALO :,1PE15.8/
     X9H  DCSIO :,1PE15.8/
     X9H    CCI :,1PE15.8/
     X9H  DCAQ0 :,1PE15.8/
     X)
      IB=3
      WRITE(1,1001)IB
      WRITE(1,1005)(I,LTITLE(I),(ITITLE(J,I),J=1,6),I=1,11)
1005  FORMAT(5X,15H LTITLE  ITITLE/11(I5,1X,I4,5X,6A4/))
      WRITE(1,1006)Y1,Y2,X1,X2,X3,X4,X5,DASH,SIZE
1006  FORMAT(9H     Y1 :,1PE15.8/
     X9H     Y2 :,1PE15.8/
     X9H     X1 :,1PE15.8/
     X9H     X2 :,1PE15.8/
     X9H     X3 :,1PE15.8/
     X9H     X4 :,1PE15.8/
     X9H     X5 :,1PE15.8/
     X9H   DASH :,1PE15.8/
     X9H   SIZE :,1PE15.8/
     X)
      IB=4
      WRITE(1,1001)IB
      WRITE(1,1007)ACC1,ACC2,IFLAG
1007  FORMAT(9H   ACC1 :,1PE15.8/
     X9H   ACC2 :,1PE15.8/9H  IFLAG :,I1)
      IB=5
      WRITE(1,1001)IB
      WRITE(1,1008)NSET,ISET,NSTEP,ISTEP
1008  FORMAT(9H   NSET :,1X,I6,9H   ISET :,1X,I6/
     X9H  NSTEP :,1X,I6,9H  ISTEP :,1X,I6)
      IB=6
      WRITE(1,1001)IB
      WRITE(1,1009)C1,C2,C3,C4,C5,C6,C7,VINV,EINV,VSTART,VEND
1009  FORMAT(3X,6H  C1 :,1PE15.8/
     X3X,6H  C2 :,1PE15.8/
     X3X,6H  C3 :,1PE15.8/
     X3X,6H  C4 :,1PE15.8/
     X3X,6H  C5 :,1PE15.8/
     X3X,6H  C6 :,1PE15.8/
     X3X,6H  C7 :,1PE15.8/
     X3X,6HVINV :,1PE15.8/
     X3X,6HEINV :,1PE15.8/
     X1X,8HVSTART :,1PE15.8/
     X1X,8HVEND   :,1PE15.8/
     X)
      IB=7
      WRITE(1,1001)IB
      WRITE(1,1010)PHIS,VI,PSIL,VA,VALOX,VGATE,VSIOX
1010  FORMAT(9H   PHIS :,1PE15.8/
     X9H     VI :,1PE15.8/
     X9H   PSIL :,1PE15.8/
     X9H     VA :,1PE15.8/
     X9H  VALOX :,1PE15.8/
     X9H  VGATE :,1PE15.8/
     X9H  VSIOX :,1PE15.8/
     X)
      IB=8
      WRITE(1,1001)IB
      WRITE(1,1011)EA,EPD,B,EXPBV,EP0,ES,EALOX,ESIOX
1011  FORMAT(9H     EA :,1PE15.8/
     X9H    EPD :,1PE15.8/
     X9H      B :,1PE15.8/
     X9H  EXPBV :,1PE15.8/
     X9H    EP0 :,1PE15.8/
     X9H     ES :,1PE15.8/
     X9H  EALOX :,1PE15.8/
     X9H  ESIOX :,1PE15.8/
     X)
      IB=9
      WRITE(1,1001)IB
      WRITE(1,1012)(I,DUM(I),I=1,20)
1012  FORMAT(20(1X,I6,1X,1PE15.8/))
      IB=13
      WRITE(1,1001)IB
      WRITE(1,1017)C8,C9,C10,C11,C12,C13,C14,C15,C16,C17,C18,C19,C20,C21
1017  FORMAT(
     X3X,6H  C8 :,1PE15.8/
     X3X,6H  C9 :,1PE15.8/
     X3X,6H C10 :,1PE15.8/
     X3X,6H C11 :,1PE15.8/
     X3X,6H C12 :,1PE15.8/
     X3X,6H C13 :,1PE15.8/
     X3X,6H C14 :,1PE15.8/
     X3X,6H C15 :,1PE15.8/
     X3X,6H C16 :,1PE15.8/
     X3X,6H C17 :,1PE15.8/
     X3X,6H C18 :,1PE15.8/
     X3X,6H C19 :,1PE15.8/
     X3X,6H C20 :,1PE15.8/
     X3X,6H C21 :,1PE15.8/
     X)
      IB=14
      WRITE(1,1001)IB
      WRITE(1,1018)ICHECK
1018  FORMAT(9H ICHECK :,I2)
      IB=15
      WRITE(1,1001)IB
      WRITE(1,1019)IPTR,LPOSVA,(I,(POSSVA(1,I),POSSVA(2,I)),I=1,LPOSVA)
1019  FORMAT(9H   IPTR :,I5/9H LPOSVA :,I5/9H POSSVA :/
     X1000(1X,I3,2(1X,1PE15.8)/))
      IB=16
      WRITE(1,1001)IB
      WRITE(1,1020)(I,VSTORE(I),I=1,7),(I,ESTORE(I),I=1,8),IBFLAG
1020  FORMAT(9H VSTORE :/
     X7(2X,I1,1X,1PE15.8/)/
     X9H ESTORE :/
     X8(2X,I1,1X,1PE15.8/)/
     X9H IBFLAG :,I2)
      IB=17
      WRITE(1,1001)IB
      WRITE(1,1021)TOTUAQ,TOTUSL,TOTUSI,UMIN,UTOT
1021  FORMAT(9H TOTUAQ :,1PE15.8/
     X9H TOTUSL :,1PE15.8/
     X9H TOTUSI :,1PE15.8/
     X9H   UMIN :,1PE15.8/
     X9H   UTOT :,1PE15.8)
      IB=18
      WRITE(1,1001)IB
      WRITE(1,1025)SIXFST,SIYFST,SIXINC,SIYINC
1025  FORMAT(
     X9H SIXFST :,1X,1PE15.8/
     X9H SIYFST :,1X,1PE15.8/
     X9H SIXINC :,1X,1PE15.8/
     X9H SIYINC :,1X,1PE15.8/)
      IB=19
      WRITE(1,1001)IB
      WRITE(1,1026)SLXFST,SLYFST,SLXINC,SLYINC
1026  FORMAT(
     X9H SLXFST :,1X,1PE15.8/
     X9H SLYFST :,1X,1PE15.8/
     X9H SLXINC :,1X,1PE15.8/
     X9H SLYINC :,1X,1PE15.8/)
      IB=20
      WRITE(1,1001)IB
      WRITE(1,1027)AQXFST,AQYFST,AQXINC,AQYINC
1027  FORMAT(
     X9H AQXFST :,1X,1PE15.8/
     X9H AQYFST :,1X,1PE15.8/
     X9H AQXINC :,1X,1PE15.8/
     X9H AQYINC :,1X,1PE15.8/)
      WRITE(1,1028)(I,XDAT(I),YDAT(I),I=1,102)
1028  FORMAT(6X,5H XDAT,11X,5H YDAT/
     X102(I4,2(1X,1PE15.8)/)/)
      IB=22
      WRITE(1,1001)IB
      WRITE(1,1022)DCSLMX,BETAMX,SNAMX,C0MX,X0ALMX,X0SIMX,
     XDMX,VBMX,CM0MX,SNDMX
1022  FORMAT(
     X9H DCSLMX :,1X,1PE15.8/
     X9H BETAMX :,1X,1PE15.8/
     X9H  SNAMX :,1X,1PE15.8/
     X9H   C0MX :,1X,1PE15.8/
     X9H X0ALMX :,1X,1PE15.8/
     X9H X0SIMX :,1X,1PE15.8/
     X9H    DMX :,1X,1PE15.8/
     X9H   VBMX :,1X,1PE15.8/
     X9H  CM0MX :,1X,1PE15.8/
     X9H  SNDMX :,1X,1PE15.8/
     X)
      IB=23
      WRITE(1,1001)IB
      WRITE(1,1023)DCSLMN,BETAMN,SNAMN,C0MN,X0ALMN,X0SIMN,DMN,
     XVDMN,CM0MN,SNDMN
1023  FORMAT(
     X9H DCSLMN :,1X,1PE15.8/
     X9H BETAMN :,1X,1PE15.8/
     X9H  SNAMN :,1X,1PE15.8/
     X9H   C0MN :,1X,1PE15.8/
     X9H X0ALMN :,1X,1PE15.8/
     X9H X0SIMN :,1X,1PE15.8/
     X9H    DMN :,1X,1PE15.8/
     X9H   VBMN :,1X,1PE15.8/
     X9H  CM0MN :,1X,1PE15.8/
     X9H  SNDMN :,1X,1PE15.8/
     X)
      IB=24
      WRITE(1,1001)IB
      WRITE(1,1024)(I,PSILAR(I),VAAR(I),I=1,12)
1024  FORMAT(1X,5H ISET,1X,7H PSILAR,8X,5H VAAR/
     X12(1X,1I5,2(1X,1PE15.8)/))
      IB=25
      WRITE(1,1001)IB
      WRITE(1,1029)ITHICK
1029  FORMAT(1X,10H ITHICK = ,I6)
      IF(JJ.LT.0)WRITE(1,1013)
      IF(JJ.LT.0)RETURN
      IB=10
      WRITE(1,1001)IB
      WRITE(1,1014)LABEL(1),LABEL(2),
     X(J,J=1,5),(I,XAQ(I),(VAQ(I,J),J=1,5),I=1,100),
     X(J,J=6,10),(I,XAQ(I),(VAQ(I,J),J=6,10),I=1,100),
     XLABEL(3),LABEL(4),
     X(J,J=1,5),(I,XAQ(I),(EAQ(I,J),J=1,5),I=1,100),
     X(J,J=6,10),(I,XAQ(I),(EAQ(I,J),J=6,10),I=1,100),
     XLABEL(5),LABEL(6),
     X(J,J=1,5),(I,XAQ(I),(QAQ(I,J),J=1,5),I=1,100),
     X(J,J=6,10),(I,XAQ(I),(QAQ(I,J),J=6,10),I=1,100),
     XLIMAQ
1014  FORMAT(14H AQUEOUS PHASE//
     X3(2A4,2(//13H X-COORDINATE,
     X2X,5(7H ISET =,1X,I2,6X)/
     X100(1X,I3,1X,1PE9.2,5(1X,1PE15.8)/)//)//)
     X9H  LIMAQ :,1X,I4)
      IB=11
      WRITE(1,1001)IB
      WRITE(1,1015)LABEL(1),LABEL(2),
     X(J,J=1,5),(I,XSL(I),(VSL(I,J),J=1,5),I=1,100),
     X(J,J=6,10),(I,XSL(I),(VSL(I,J),J=6,10),I=1,100),
     XLABEL(3),LABEL(4),
     X(J,J=1,5),(I,XSL(I),(ESL(I,J),J=1,5),I=1,100),
     X(J,J=6,10),(I,XSL(I),(ESL(I,J),J=6,10),I=1,100),
     XLABEL(5),LABEL(6),
     X(J,J=1,5),(I,XSL(I),(QSL(I,J),J=1,5),I=1,100),
     X(J,J=6,10),(I,XSL(I),(QSL(I,J),J=6,10),I=1,100),
     XLIMSL,XSLLOC,XMAXSL
1015  FORMAT(14H SURFACE LAYER//
     X3(2A4,2(//13H X-COORDINATE,
     X2X,5(7H ISET =,1X,I2,6X)/
     X100(1X,I3,1X,1PE9.2,5(1X,1PE15.8)/)//)//)
     X9H  LIMSL :,1X,I4/
     X9H XSLLOC :,1PE15.8/
     X9H XMAXSL :,1PE15.8)
      IB=12
      WRITE(1,1001)IB
      WRITE(1,1016)LABEL(1),LABEL(2),
     X(J,J=1,5),(I,XSI(I),(VSI(I,J),J=1,5),I=1,100),
     X(J,J=6,10),(I,XSI(I),(VSI(I,J),J=6,10),I=1,100),
     XLABEL(3),LABEL(4),
     X(J,J=1,5),(I,XSI(I),(ESI(I,J),J=1,5),I=1,100),
     X(J,J=6,10),(I,XSI(I),(ESI(I,J),J=6,10),I=1,100),
     XLABEL(5),LABEL(6),
     X(J,J=1,5),(I,XSI(I),(QSI(I,J),J=1,5),I=1,100),
     X(J,J=6,10),(I,XSI(I),(QSI(I,J),J=6,10),I=1,100),
     XLIMSI,XSILOC,XMAXSI
1016  FORMAT(14H SILICON PHASE//
     X3(2A4,2(//13H X-COORDINATE,
     X2X,5(7H ISET =,1X,I2,6X)/
     X100(1X,I3,1X,1PE9.2,5(1X,1PE15.8)/)//)//)
     X9H  LIMSI :,1X,I4/
     X9H XSILOC :,1PE15.8/
     X9H XMAXSI :,1PE15.8)
      WRITE(1,1013)
1013  FORMAT(///130(1H*)///)
      RETURN
      END
C
C******
C
C
      SUBROUTINE CK(IVAL,ARG,LAB,ISEG)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB14/ICHECK
      CHARACTER *6 LAB,ISEG
C      IF ROUTINE SWITCHED OFF, RETURN
      IF(ICHECK.EQ.0)RETURN
C      IF IVAL < 0, ITS A SPECIAL CALL
      IF(IVAL.LT.0)WRITE(1,1001)((LAB,ISEG),J=1,5)
1001  FORMAT(1X,10A6)
      IF(IVAL.LT.0)RETURN
      WRITE(1,1000)IVAL,LAB,ARG,ISEG
1000  FORMAT(15H CHECKPOINT : (,I2,1H),A6,3H = ,1PE15.8,4H :: ,A6)
      RETURN
      END
C
C******
C
C
      SUBROUTINE ENERGY(FLAST,ISENSE)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB01/DCSL(10),BETA(10),SNA(10),C0(10),X0ALO(10),
     XX0SIO(10),D(10),VB(10),CM0(10),SND(10)
      COMMON/CB04/ACC1,ACC2,IFLAG
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
      COMMON/CB17/TOTUAQ,TOTUSL,TOTUSI,UMIN,UTOT
C      SET UMIN TO INCREDIBLY HIGH VALUE SO THAT ALL POSSIBLE SYSTEM
C      ENERGIES WILL BE LESS THAN IT
      DATA UMIN/1.0D74/
      DATA UX/1.0D60/
      DATA FF/1000.0/
C      SUBROUTINE TO CALCULATE THE OVERALL ELECTROSTATIC ENERGY
C      OF THE SYSTEM, AND STORE THE CONTENTS OF THE BOUNDARY CONDITION
C      COMMON BLOCKS (CB07 AND CB08) IF ITS THE LOWEST.
C      ISENSE IS A FLAG TO BE SET IF A SENSIBLE SOLUTION IS FOUND
C      FLAST CONTAINS THE VALUE OF THE CLOSED LOOP VOLTAGE
C      IF > FF% OF VB, DON'T BOTHER WITH ENERGY, AS
C      LOOP HAS FAILED TO CLOSE
      IF(ABS(FLAST).GT.(FF*VB(ISET)))UTOT=UX
      IF(ABS(FLAST).GT.(FF*VB(ISET)))RETURN
C      AQUEOUS PHASE
      CALL AQENER
C      SURFACE LAYER
C      (USE ONE OF TWO ROUTINES, DEPENDING ON DUMMY FIELD FLAG)
      IF(IFLAG.EQ.0)CALL SLEN0
      IF(IFLAG.NE.0)CALL SLEN1
C      SILICON
      CALL SIENER
C      CALCULATE TOTAL ENERGY
      UTOT=TOTUAQ+TOTUSL+TOTUSI
      CALL CK(66,TOTUAQ,'TOTUAQ','ENERGY')
      CALL CK(67,TOTUSL,'TOTUSL','ENERGY')
      CALL SELECT
      CALL CK(68,TOTUSI,'TOTUSI','ENERGY')
      CALL CK(69,UTOT  ,'UTOT  ','ENERGY')
C      SAVE THE SMALLEST
      UMIN=DMIN1(UMIN,UTOT)
      CALL CK(70,UMIN  ,'UMIN  ','ENERGY')
      IF(UMIN.EQ.UTOT)CALL STORE
C      IF ENERGY SENSIBLE, SET ISENSE
      IF(UMIN.LT.1.0E10)ISENSE=1
      RETURN
      END
C
C******
C
C
      SUBROUTINE RELOAD
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB04/ACC1,ACC2,IFLAG
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
      COMMON/CB07/V(7)
      COMMON/CB08/E(8)
      COMMON/CB16/VSTORE(7),ESTORE(8),IBFLAG
      COMMON/CB24/PSILAR(12),VAAR(12)
C      ROUTINE TO RELOAD THE CONTENTS
C      OF THE TEMPORARY BOUNDARY CONDITION STORE (CB16)
C      BACK INTO THE BOUNDARY CONDITION COMMON BLOCKS.
C      BY NOW CB16 SHOULD HOLD THE BOUNDARY CONDITIONS FOR THE
C      CONFIGURATION WITH THE LOWEST ELECTROSTATIC ENERGY.
C      WATCH OUT FOR SNEAKY TRICKS WITH COMMON.
C      BOUNDARY VOLTAGES
      DO 100 I=1,7
      V(I)=VSTORE(I)
100   CONTINUE
C      BOUNDARY FIELDS
      DO 200 I=1,8
      E(I)=ESTORE(I)
200   CONTINUE
C      RESTORE DUMMY FIELD FLAG
      IFLAG=IBFLAG
C      AND SAVE THE TWO INTERFACE VOLTAGES
C      AQUEOUS INTERFACE VOLTAGE, (VA):
      VAAR(ISET)=VSTORE(4)
C      VOLTAGE DROP  ACROSS SURFACE LAYER, (PSIL):
      PSILAR(ISET)=VSTORE(3)
      RETURN
      END
C
C******
C
C
      SUBROUTINE STORE
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
C      WATCH OUT FOR THE SNEAKY TRICKS WITH COMMON
      COMMON/CB04/ACC1,ACC2,IFLAG
      COMMON/CB07/V(7)
      COMMON/CB08/E(8)
      COMMON/CB16/VSTORE(7),ESTORE(8),IBFLAG
C      ROUTINE TO STORE THE CONTENTS OF THE BOUNDARY CONDITION
C      COMMON BLOCKS (CB07 AND CB08)
C      IN BLOCK CB16
C      BOUNDARY VOLTAGES
      DO 100 I=1,7
      VSTORE(I)=V(I)
100   CONTINUE
C      BOUNDARY FIELDS
      DO 200 I=1,8
      ESTORE(I)=E(I)
200   CONTINUE
C      STORE THE DUMMY FIELD FLAG
      IBFLAG=IFLAG
      RETURN
      END
C
C******
C
C
      SUBROUTINE OUTPUT
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
C
C      *** NOTE THAT ALL THE CODE PERTAINING TO THE SILICON PHASE
C      IS REDUNDANT. I DECIDED NOT TO PLOT IT, AS ITS
C      ONLY DEPLETION APPROXIMATION ANYWAY, AND IT COCKS
C      UP THE LAYOUT IF D IS THE VARIABLE PARAMETER.
C      (IT GETS COCKED UP ANYWAY IF D IS THE VARIABLE PARAMETER,
C      BUT NOT SO BADLY) ***
C
C      ROUTINE TO OUTPUT THE FINAL RESULTS OF ALL THIS MESS
      CALL OUTINT
C      CLOSE GRAPHICS
      CALL PLOT(30.0,30.0,999)
C      AND DUMP THE ANSWERS
      WRITE(1,1000)
1000  FORMAT(7H OUTPUT)
      CALL PANIC(0)
      RETURN
      END
C
C******
C
C
      SUBROUTINE GLIM2(ARR,ARRMAX,ARRMIN)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
      DIMENSION ARR(100,10)
C      ROUTINE TO CALCULATE THE MAXIMUM AND MINIMUM VALUES OF THE DATA
C      CONTAINED IN THE ARRAY ARR.
C      EACH CONTOUR CONTAINS LIM POINTS, AND THE NUMBER OF CONTOURS
C      IS GIVEN BY ISET.
C      THERE IS ALWAYS AT LEAST ONE CONTOUR.
C      INITIALISE DUMMY ARRAY SIZE
      DATA LIM/100/
C      INITIALISE MAX AND MIN POINTERS
      ARRMAX=ARR(1,1)
      ARRMIN=ARR(1,1)
C      SET UP LOOP TO GO THROUGH ONE CONTOUR SET AT A TIME
      DO 100 I=1,ISET
C      SET UP LOOP TO GO THROUGH ONE PROFILE AT A TIME
      DO 200 J=1,LIM
      ARRMAX=DMAX1(ARRMAX,ARR(J,I))
      ARRMIN=DMIN1(ARRMIN,ARR(J,I))
200   CONTINUE
100   CONTINUE
      RETURN
      END
C
C******
C
C
      SUBROUTINE OUTINT
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
      COMMON/CB24/PSILAR(12),VAAR(12)
      DIMENSION DUM(4),ABSCIS(12),IXTIT(4),IYTIT(5)
      DIMENSION YDUM(12)
C      ROUTINE TO OUTPUT THE AQUEOUS PHASE INTERFACE VOLTAGE (VA)
C      AND THE SURFACE LAYER VOLTAGE (PSIL) AS A FUNCTION OF ISET
C      OUTPUT WILL CONSIST OF THREE CURVES, VA, PSIL
C      AND (VA+PSIL) PLOTTED ON THE SAME AXES
      DATA IXTIT(1)/4HPARA/,IXTIT(2)/4HMETE/
      DATA IXTIT(3)/4HR SE/,IXTIT(4)/4HT   /
      DATA LIXTIT/16/
      DATA IYTIT(1)/4HINTE/,IYTIT(2)/4HRFAC/
      DATA IYTIT(3)/4HIAL /,IYTIT(4)/4HVOLT/
      DATA IYTIT(5)/4HAGES/
      DATA LIYTIT/20/
C      LENGTH OF X AXIS
      XAX=30.0
C      LEBGTH OF Y AXIS
      YAX=25.0
C      HEIGHT OF CHARACTERS
      CHARHT=0.35
C      CALCULATE MAXIMUM AND MINIMUM EXCURSIONS
      CALL EXCUR(VMAX,VMIN)
C      LOAD INTO DUMMY SCALING ARRAY
      DUM(1)=VMIN
      DUM(2)=VMAX
C      AND SCALE
      CALL SCALE(DUM,YAX,2,1)
C      LOAD ABSCISSA ARRAY
      DO 100 I=1,ISET
      ABSCIS(I)=FLOAT(I)
100   CONTINUE
C      AND SCALE ABSCISSA
      CALL SCALE(ABSCIS,XAX,ISET,1)
C      UNLOAD SCALING INFORMATION FROM SCALED ARRAYS
      ISET1=ISET+1
      ISET2=ISET+2
      FIRSTX=ABSCIS(ISET1)
      DELTAX=ABSCIS(ISET2)
      FIRSTY=DUM(3)
      DELTAY=DUM(4)
C      AND INSERT SCALING INFORMATION INTO Y DATA ARRAYS
      PSILAR(ISET1)=FIRSTY
      PSILAR(ISET2)=DELTAY
      VAAR(ISET1)=FIRSTY
      VAAR(ISET2)=DELTAY
      YDUM(ISET1)=FIRSTY
      YDUM(ISET2)=DELTAY
C      LH Y AXIS
      CALL AXIS(0.0,0.0,IYTIT,LIYTIT,YAX,90.0,FIRSTY,DELTAY)
C      BOTTOM X AXIS
      CALL PLOT(0.0,0.0,3)
      CALL PLOT(XAX,0.0,2)
C      RH Y AXIS
      CALL AXIS(XAX,0.0,IYTIT,-LIYTIT,YAX,90.0,FIRSTY,DELTAY)
C      TOP X AXIS
      CALL PLOT(0.0,YAX,3)
      CALL PLOT(XAX,YAX,2)
C      DRAW VA CURVE
      CALL LINE(ABSCIS,VAAR,ISET,1,1,3)
C      DRAW PSIL CURVE
      CALL LINE(ABSCIS,PSILAR,ISET,1,1,4)
C      DRAW SUM : FIRST ADD THE TWO TOGETHER IN VAAR, THEN PLOT
      DO 200 I=1,ISET
      VAAR(I)=VAAR(I)+PSILAR(I)
200   CONTINUE
      CALL LINE(ABSCIS,VAAR,ISET,1,1,11)
C      CALIBRATE LOWER X AXIS
C      TICK MARKS
C      GET Y COORDINATE OF BOTTOM X AXIS AND LOAD INTO DUMMY
CV     Y ARRAY
      DO 600 I=1,ISET
      YDUM(I)=FIRSTY
600   CONTINUE
      CALL LINE(ABSCIS,YDUM,ISET,1,-1,13)
C      GET Y COORDINATE OF TOP AXIS
      YTOP=FIRSTY+(DELTAY*YAX)
C      LOAD INTO DUMMY Y ARRAY
      DO 300 I=1,ISET
      YDUM(I)=YTOP
300   CONTINUE
C      AND TOP X AXIS TICK MARKS
      CALL LINE(ABSCIS,YDUM,ISET,1,-1,13)
C      X TITLE OFFSET
      XOFF=(XAX-(CHARHT*FLOAT(LIXTIT)))/2.0
C      Y TITLE OFFSET
      YOFF=3.0*CHARHT
C      TOP TITLE
      CALL SYMBOL(XOFF,(YAX+YOFF),CHARHT,IXTIT,0,0.0,LIXTIT)
C      BOTTOM TITLE
      CALL SYMBOL(XOFF,-(YOFF+CHARHT),CHARHT,IXTIT,0,0.0,LIXTIT)
C      CALIBRATE BOTTOM AXIS
      Y=0.4-YOFF
      DO 400 I=1,ISET
      X=FIRSTX+(ABSCIS(I)/DELTAX)
      CALL NUMBER(X,Y,CHARHT,ABSCIS(I),0.0,-1)
400   CONTINUE
C      TOP AXIS
      Y=CHARHT+YAX
      DO 500 I=1,ISET
      X=FIRSTX+(ABSCIS(I)/DELTAX)
      CALL NUMBER(X,Y,CHARHT,ABSCIS(I),0.0,-1)
500   CONTINUE
C      CALCULATE PLOTTER COORDINATES OF V = 0.0 LINE
      Y0=-FIRSTY/DELTAY
C      DRAW DASHED LINE AT V = 0.0
C      IF IT IS ECLOSED BY THE GRAPH
      CALL PLOT(0.0,Y0,3)
      IF((Y0.GE.0.0).AND.(Y0.LE.YAX))CALL DASHP(XAX,Y0,0.5)
C      DRAW TICK MARKS ON V = 0.0 LINE
      DO 700 I=1,ISET
      YDUM(I)=0.0
700   CONTINUE
      CALL LINE(ABSCIS,YDUM,ISET,1,-1,13)
C      DRAW KEY
      CALL DRKEY(YAX)
C      MOVE PEN TO POSITION TO START NEXT PLOT, AND ESTABLISH
C      NEW ORIGIN
      CALL PLOT((XAX+10.0),0.0,-3)
C      DRAW THE PROFILES OF EACH PHASE SEPERATELY
      CALL DRPHAS
      RETURN
      END
C
C******
C
C
      SUBROUTINE DRKEY(YAX)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
C      ROUTINE TO DRAW THE SYMBOL KEYS ON THE
C      INTERFACE VOLTAGE GRAPH
      DIMENSION IVA(4),IPSIL(4),ISUM(4),IVOL(2)
      CHARACTER*1 IBCD
      DATA IVA(1)/4HAQUE/,IVA(2)/4HOUS /,IVA(3)/4H PHA/
      DATA IVA(4)/4HSE  /,LIVA/16/
      DATA IPSIL(1)/4HSURF/,IPSIL(2)/4HACE /,IPSIL(3)/4H LAY/
      DATA IPSIL(4)/4HER  /,LIPSIL/16/
      DATA ISUM(1)/4HTOTA/,ISUM(2)/4HL VO/,ISUM(3)/4HLTAG/
      DATA ISUM(4)/4HE   /,LISUM/16/
      DATA IVOL(1)/4HVOLT/,IVOL(2)/4HAGE /,LIVOL/8/
      DATA CH/0.35/
      X1=-9.0
      X2=-8.0
      Y1=15.0
      Y2=14.0
      Y3=13.0
      Y4=12.0
      Y5=11.0
      CALL SYMBOL(X1,Y1,CH,IBCD,3     ,0.0,-1    )
      CALL SYMBOL(X2,Y1,CH,IVA   ,0,0.0,LIVA  )
      CALL SYMBOL(X2,Y2,CH,IVOL  ,0,0.0,LIVOL )
      CALL SYMBOL(X1,Y3,CH,IBCD,4     ,0.0,-1    )
      CALL SYMBOL(X2,Y3,CH,IPSIL ,0,0.0,LIPSIL)
      CALL SYMBOL(X2,Y4,CH,IVOL  ,0,0.0,LIVOL )
      CALL SYMBOL(X1,Y5,CH,IBCD,11    ,0.0,-1    )
      CALL SYMBOL(X2,Y5,CH,ISUM  ,0,0.0,LISUM )
      X1=5.0
      X2=6.0
      X3=11.6
      Y1=YAX+5.0
      Y2=YAX+4.0
      Y3=YAX+3.0
      CALL SYMBOL(X1,Y1,CH,IBCD,3     ,0.0,-1    )
      CALL SYMBOL(X2,Y1,CH,IVA   ,0,0.0,LIVA  )
      CALL SYMBOL(X3,Y1,CH,IVOL  ,0,0.0,LIVOL )
      CALL SYMBOL(X1,Y2,CH,IBCD,4     ,0.0,-1    )
      CALL SYMBOL(X2,Y2,CH,IPSIL ,0,0.0,LIPSIL)
      CALL SYMBOL(X3,Y2,CH,IVOL  ,0,0.0,LIVOL )
      CALL SYMBOL(X1,Y3,CH,IBCD,11    ,0.0,-1    )
      CALL SYMBOL(X2,Y3,CH,ISUM  ,0,0.0,LISUM )
      RETURN
      END
C
C******
C
C
      SUBROUTINE EXCUR(VMAX,VMIN)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
      COMMON/CB24/PSILAR(12),VAAR(12)
C      ROUTINE TO RETURN THE MAXIMUM AND MINIMUM VALUES OF
C      THE INTERFACIAL VOLTAGES FROM ALL THE PARAMETER SETS
C      INCLUDE THE SUM OF THE TWO, AS THIS HAS ALSO TO BE PLOTTED
C      INITIALISE EXTREMA
      VMAX=VAAR(1)
      VMIN=VAAR(1)
C      AND GET ON WITH IT
      DO 100 I=1,ISET
      VSUM=VAAR(I)+PSILAR(I)
      VMAX=DMAX1(VAAR(I),PSILAR(I),VSUM,VMAX)
      VMIN=DMIN1(VAAR(I),PSILAR(I),VSUM,VMIN)
100   CONTINUE
      RETURN
      END
C
C******
C
C
      SUBROUTINE DRPHAS
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
      COMMON/CB11/VSL(100,10),ESL(100,10),QSL(100,10),XSL(100),LIMSL,
     XXSLLOC,XMAXSL
      COMMON/CB10/VAQ(100,10),EAQ(100,10),QAQ(100,10),XAQ(100),LIMAQ
      COMMON/CB12/VSI(100,10),ESI(100,10),QSI(100,10),XSI(100),LIMSI,
     XXSILOC,XMAXSI
C      ROUTINE TO DUMP OUT THE CONTENTS OF THE SOLUTION ARRAYS
C      ONE AT A TIME, GRAPHICALLY.
C      AQUEOUS VOLTAGE
      CALL OUTARR(VAQ,XAQ,LIMAQ,ISET,1)
C      SURFACE LAYER VOLTAGE
      CALL OUTARR(VSL,XSL,LIMSL,ISET,2)
C      AQUEOUS FIELD
      CALL OUTARR(EAQ,XAQ,LIMAQ,ISET,3)
C      SURFACE LAYER FIELD
      CALL OUTARR(ESL,XSL,LIMSL,ISET,4)
C      AQUEOUS CHARGE DENSITY
      CALL OUTARR(QAQ,XAQ,LIMAQ,ISET,5)
C      SURFACE LAYER CHARGE DENSITY
      CALL OUTARR(QSL,XSL,LIMAQ,ISET,6)
      RETURN
      END
C
C******
C
C
      SUBROUTINE OUTARR(YARR,XARR,LIM1,LIM2,ICODE)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
      COMMON/CB21/XDAT(102),YDAT(102)
      DIMENSION YARR(LIM1,LIM2),XARR(LIM1),DUM(4),T(10,6),LT(6),XLAB(2)
      INTEGER XLAB
      INTEGER T
      DATA T(1,1)/4HAQUE/,T(2,1)/4HOUS /,T(3,1)/4HVOLT/,T(4,1)/4HAGE /
      DATA T(5,1)/4H(V) /
      DATA T(1,2)/4HSURF/,T(2,2)/4HACE /,T(3,2)/4HLAYE/,T(4,2)/4HR VO/
      DATA T(5,2)/4HLTAG/,T(6,2)/4HE (V/,T(7,2)/4H)   /
      DATA T(1,3)/4HAQUE/,T(2,3)/4HOUS /,T(3,3)/4HFIEL/,T(4,3)/4HD (V/
      DATA T(5,3)/4H/M) /
      DATA T(1,4)/4HSURF/,T(2,4)/4HACE /,T(3,4)/4HLAYE/,T(4,4)/4HR FI/
      DATA T(5,4)/4HELD /,T(6,4)/4H(V/M/,T(7,4)/4H)   /
      DATA T(1,5)/4HAQUE/,T(2,5)/4HOUS /,T(3,5)/4HCHAR/,T(4,5)/4HGE D/
      DATA T(5,5)/4HENSI/,T(6,5)/4HTY (/,T(7,5)/4HC/M*/,T(8,5)/4H*3) /
      DATA T(1,6)/4HSURF/,T(2,6)/4HACE /,T(3,6)/4HLAYE/,T(4,6)/4HR CH/
      DATA T(5,6)/4HARGE/,T(6,6)/4H DEN/,T(7,6)/4HSITY/,T(8,6)/4H (C//
      DATA T(9,6)/4HM**3/,T(10,6)/4H)   /
      DATA LT/19,25,20,25,31,37/
      DATA XAX/25.0/,YAX/20.0/
      DATA XLAB(1)/4HMETR/,XLAB(2)/4HES  /
      DATA LXLAB/6/
C      ROUTINE TO PLOT A SINGLE SET OF PROFILES HELD IN THE
C      ARRAY YARR
C      GET MAXIMUM AND MINIMUM VALUE OF THE PROFILES
      CALL GLIM2(YARR,ARRMAX,ARRMIN)
C      LOAD INTO DUMMY ARRAY TO BE SCALED BY CALCOMP SOFTWARE
      DUM(1)=ARRMAX
      DUM(2)=ARRMIN
C      AND SCALE
      CALL SCALE(DUM,YAX,2,1)
C      AND DRAW LH Y AXIS
      CALL AXIS(0.0,0.0,T(1,ICODE),LT(ICODE),YAX,90.0,DUM(3),DUM(4))
C      RH Y AXIS
      CALL AXIS(XAX,0.0,T(1,ICODE),-LT(ICODE),YAX,90.0,DUM(3),DUM(4))
C      LOAD SCALING FACTORS INTO Y PLOTTING ARRAY
      YDAT(101)=DUM(3)
      YDAT(102)=DUM(4)
C      LOAD X AXIS DATA INTO PLOTTING ARRAY
      DO 100 I=1,LIM1
      XDAT(I)=XARR(I)
100   CONTINUE
C      SCALE IT
      CALL SCALE(XDAT,XAX,LIM1,1)
C      BOTTOM X AXIS
      CALL AXIS(0.0,0.0,XLAB,-LXLAB,XAX,0.0,XDAT(101),XDAT(102))
C      TOP X AXIS
      CALL AXIS(0.0,YAX,XLAB,LXLAB,XAX,0.0,XDAT(101),XDAT(102))
C      PLOT THE CONTOURS
      DO 200 I=1,ISET
      CALL DRPROF(YARR,LIM1,LIM2,I)
200   CONTINUE
C      MOVE PEN TO POSITION TO START A NEW PLOT, AND ESTABLISH A
C      NEW ORIGIN
      CALL PLOT((XAX+10.0),0.0,-3)
      RETURN
      END
C
C******
C
C
      SUBROUTINE DRPROF(YARR,LIM1,LIM2,ICONT)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB21/XDAT(102),YDAT(102)
C      ROUTINE TO DRAW CONTOUR ICONT, HELD INT
C      ARRAY YARR
      DIMENSION YARR(LIM1,LIM2)
C      UNLOAD CONTOUR FROM STORAGE ARRAY INTO
C      PLOTTING ARRAY
      DO 100 I=1,LIM1
      YDAT(I)=YARR(I,ICONT)
100   CONTINUE
C      (SCALE FACTORS ARE ALREADY IN YDAT, PUT THERE BY S/R OUTARR)
C      SO PLOT IT
      CALL LINE(XDAT,YDAT,LIM1,1,0,0)
      RETURN
      END
C
C******
C
C
      SUBROUTINE SLPROF
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB01/DCSL(10),BETA(10),SNA(10),C0(10),X0ALO(10),
     XX0SIO(10),D(10),VB(10),CM0(10),SND(10)
      COMMON/CB02/Q,DC0,DCSI,DCALO,DCSIO,CCI,DCAQ0
      COMMON/CB04/ACC1,ACC2,IFLAG
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
      COMMON/CB06/C1,C2,C3,C4,C5,C6,C7,VINV,EINV,VSTART,VEND
      COMMON/CB07/PHIS,VI,PSIL,VA,VALOX,VGATE,VSIOX
      COMMON/CB08/EA,EPD,B,EXPBV,EP0,ES,EALOX,ESIOX
      COMMON/CB11/VSL(100,10),ESL(100,10),QSL(100,10),XSL(100),LIMSL,
     XXSLLOC,XMAXSL
      COMMON/CB13/C8,C9,C10,C11,C12,C13,C14,C15,C16,C17,C18,C19,C20,C21
C      ROUTINE TO CALCULATE CHARGE DENSITY, ELECTRIC FIELD AND
C      VOLTAGE PROFILES IN THE SURFACE LAYER, GIVEN THE BOUNDARY
C      CONDITIONS ESTABLISHED BY SUBROUTINE CLOSLP
C      CALCULATE X INCREMENT
      XINC=D(ISET)/FLOAT(LIMSL)
C      CALCULATE HORRIBLE CONSTANT
      HCE=ADBEXP(-BETA(ISET)*VA)
      CL1=C4*HCE
C      CALCULATE SECOND HORRIBLE CONSTANT
      CL2=C13*HCE
C      SE; UP LOOP TO ESTABLISH VOLTAGE, FIELD AND CHARGE DENSITY
C      PROFILES
      DO 100 I=1,LIMSL
C      POSITION IN LAYER
      XSLLOC=FLOAT(I-1)*XINC
C      GET VOLTAGE (NB VALUE HELD IN IFLAG IS STILL VALID)
      IF(IFLAG.EQ.0)CALL GPSIL0
      IF(IFLAG.NE.0)CALL GPSIL1
C      AND STORE RESULT
      VSL(I,ISET)=PSIL
C      IF FIRST TIME ROUND, STORE POSITION COORDINATE
      IF(ISET.EQ.1)XSL(I)=XSLLOC
C      EXPONENT OF NORMALISED VOLTAGE
      TEXP=ADBEXP(-BETA(ISET)*PSIL)
C      CHARGE DENSITY
      QSL(I,ISET)=CL2*TEXP
C      FIELD
      TESL=(EPD*EPD)-(CL1*(1.0-TEXP))
      IF(TESL.LT.0.0)CALL PANIC(10)
C      CALCULATE SIGN OF FIELD.
C      SIGN IS CALCULATED FROM DERIVATIVE INFORMATION, SO WE
C      NEED THE POSITION COORDINATE
      IF(IFLAG.EQ.0)TESL=ESURF0(XSLLOC)
      IF(IFLAG.NE.0)TESL=ESURF1(XSLLOC)
      ESL(I,ISET)=TESL
100   CONTINUE
      RETURN
      END
C
C******
C
C
      FUNCTION ESURF0(X)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB01/DCSL(10),BETA(10),SNA(10),C0(10),X0ALO(10),
     XX0SIO(10),D(10),VB(10),CM0(10),SND(10)
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
      COMMON/CB08/EA,EPD,B,EXPBV,EP0,ES,EALOX,ESIOX
C      FUNCTION TO RETURN THE ELECTRIC FIELD IN THE SURFACE
C      LAYER AT POSITION X, GIVEN IFLAG = 0
      S1=EPD/B
      S0=B*BETA(ISET)*(X-D(ISET))/2.0
      TS0=TAN(S0)
      ESURF0=B*((S1+TS0)/(1.0-(S1*TS0)))
      RETURN
      END
C
C******
C
C
      FUNCTION ESURF1(X)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB01/DCSL(10),BETA(10),SNA(10),C0(10),X0ALO(10),
     XX0SIO(10),D(10),VB(10),CM0(10),SND(10)
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
      COMMON/CB08/EA,EPD,B,EXPBV,EP0,ES,EALOX,ESIOX
C      FUNCTION TO RETURN THE ELCTRIC FIELD IN THE SURFACE LAYER,
C      GIVEN IFLAG = 1
      S1=EPD/B
      S0=B*BETA(ISET)*(X-D(ISET))/2.0
      S1P=S1+1.0
      S1M=S1-1.0
      E=ADBEXP(2.0*S0)
      ESURF1=B*(S1P+(S1M*E))/(S1P-(S1M*E))
      RETURN
      END
C
C******
C
C
      SUBROUTINE SIPROF
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB01/DCSL(10),BETA(10),SNA(10),C0(10),X0ALO(10),
     XX0SIO(10),D(10),VB(10),CM0(10),SND(10)
      COMMON/CB02/Q,DC0,DCSI,DCALO,DCSIO,CCI,DCAQ0
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
      COMMON/CB06/C1,C2,C3,C4,C5,C6,C7,VINV,EINV,VSTART,VEND
      COMMON/CB07/PHIS,VI,PSIL,VA,VALOX,VGATE,VSIOX
      COMMON/CB08/EA,EPD,B,EXPBV,EP0,ES,EALOX,ESIOX
      COMMON/CB12/VSI(100,10),ESI(100,10),QSI(100,10),XSI(100),LIMSI,
     XXSILOC,XMAXSI
      COMMON/CB13/C8,C9,C10,C11,C12,C13,C14,C15,C16,C17,C18,C19,C20,C21
C      ROUTINE TO CALCULATE CHARGE DENSITY, ELECTRIC FIELD AND
C      VOLTAGE PROFILES IN THE SILICON, USING THE DEPLETION
C      APPROXIMATION, GIVEN THE SURFACE FIELD AND POTENTIAL
C      AS SUPPLIED BY SUBROUTINE CLOSLP
C      CALCULATE DEPTH OF DEPLETION REGION
C      DEPTH USED IS THAT OF MAXIMUM DEPLETION WIDTH THAT WILL
C      OCCOUR IN THE COMPLETE SET OF PROFILES.
C      CALCULATED BY S/Y SETMTH, AS ITS A FUNCTION OF JISET
      XDEP=C15*SQRT(PHIS)
C      CALCULATE SURFACE FIELD
      ESURF=ES
      IF(PHIS.GT.VINV)ESURF=EINV
C      CALCULATE X INCREMENT
      XINC=XDEP/FLOAT(LIMSI)
C      SET UP LOOP TO CALCULATE PROFILES AND STORE THEM
      DO 100 I=1,LIMSI
      FF=(1.0-(X/XDEP))
C      X-COORDINATE
      X=FLOAT(I-1)*XINC
C      VOLTAGE
      VSI(I,ISET)=PHIS*FF*FF
C      FIELD
      ESI(I,ISET)=ESURF*FF
C      CHARGE
      QSI(I,ISET)=SNA(ISET)
C      POSITION
C      (IF FIRST TIME ROUND)
      IF(ISET.EQ.1)XSI(I)=X
100   CONTINUE
C      SO ALL PROFILES NICELY TUCKED UP IN DATA ARRAYS
C      IF SURFACE INVERTED, LOAD INVERSION CHARGE INTO
C      FIRST ELEMENT OF CHARGE ARRAY
      IF(PHIS.GT.VINV)QSI(1,ISET)=(ES*DCSIO)-(EINV*DCSI)
      RETURN
      END
C
C******
C
C
      SUBROUTINE CKPLOT
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
      COMMON/CB06/C1,C2,C3,C4,C5,C6,C7,VINV,EINV,VSTART,VEND
      COMMON/CB11/VSL(100,10),ESL(100,10),QSL(100,10),XSL(100),LIMSL,
     XXSLLOC,XMAXSL
      COMMON/CB12/VSI(100,10),ESI(100,10),QSI(100,10),XSI(100),LIMSI,
     XXSILOC,XMAXSI
      COMMON/CB15/IPTR,POSSVA(2,100),LPOSVA
C      THIS ROUTINE CALCULATES THE FUNCTION F AS A FUNCTION OF
C      VA, AND WRITES THE VALUES TO A FILE ON CHANNEL 2, SO THAT IF THE
C      PROGRAM CRASHES LATER, THE FILE CAN BE PICKED UP BY A
C      SUBSEQUENT JOB, AND PLOTTED
C      NUMBER OF POINTS
      NPTS=NSTEP
      ANPTS=FLOAT(NPTS-1)
      CX=(VSTART-VEND)/ANPTS
C      F IS PLOTTED BETWEEN V = VSTART AND V = VEND
C      INITIALISE F
      XSILOC=0.0
      XSLLOC=0.0
C      GET THE SIGN OF THE FIRST VALUW OF F
      SFOLD=S(F(VSTART))
C      AND THE FIRST VOLTAGE VALUE
      VOLD=VSTART
C      SET UP LOOP
      DO 100 I=1,NPTS
      FI=FLOAT(I)
      CALL CK(60,FI,'I     ','CKPLOT')
C      CALCULATE VOLTAGE VALUE
      V=(FLOAT(NPTS-I)*CX)+VEND
C      CALCULATE F-VALUE
      FV=F(V)
C      STORE THE SIGN
      SFV=S(FV)
C      IF THIS IS DIFFERENT FROM THE PREVIOUS SIGN, WE'VE CROSSED
C      A SOLUTION, SI STORE STRADDLING VOLTAGE VALUES
C      AND UPDATE POINTER
      IF(SFOLD.NE.SFV)CALL UPDATE(V,VOLD)
C      STORE CURRENT VOLTAGE VALUE AND FUNCTION SIGN FOR NEXT TIME
      SFOLD=SFV
      VOLD=V
C      AND STORE
      WRITE(2,2000)V,FV
2000  FORMAT(2(1X,1PE15.8))
100   CONTINUE
C      OK, SO PLOT WRITTEN
C      AND ALL POSSIBLE SOLUTIONS PINNED DOWN.
C      START POINTS FORCBISECTION SOLUTION TUCKED UP IN POSSVA.
      RETURN
      END
C
C******
C
C
      SUBROUTINE SLEN1
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB01/DCSL(10),BETA(10),SNA(10),C0(10),X0ALO(10),
     XX0SIO(10),D(10),VB(10),CM0(10),SND(10)
      COMMON/CB02/Q,DC0,DCSI,DCALO,DCSIO,CCI,DCAQ0
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
      COMMON/CB08/EA,EPD,B,EXPBV,EP0,ES,EALOX,ESIOX
      COMMON/CB13/C8,C9,C10,C11,C12,C13,C14,C15,C16,C17,C18,C19,C20,C21
      COMMON/CB17/TOTUAQ,TOTUSL,TOTUSI,UMIN,UTOT
C      ROUTINE TO CALCULATE THE TOTAL ELECTROSTATIC ENERGY
C      IN THE SURFACE LAYER AS A FUNCTION OF THE BOUNDARY VALUES
C      OF THE SYSTEM. THIS EXPRESSION IS ONE OF TWO USED,
C      DEPENDING ON THE VALUE OF THE DUMMY FIELD FLAG, IFLAG.
C      THIS ROUTINE CALLED IF IFLAG = 1
      U1=1.0/(2.0*B)
      E1=EXP(-B*BETA(ISET)*D(ISET))
      SP=EPD+B
      SM=EPD-B
      U=U1*((E1-1.0)/((E1*SM)-SP))
      TOTUSL=DC0*DCSL(ISET)*((B*B*D(ISET))+U)
      IF(TOTUSL.LT.0.0)CALL PANIC(-2)
      RETURN
      END
C
C******
C
C
      SUBROUTINE SLEN0
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB01/DCSL(10),BETA(10),SNA(10),C0(10),X0ALO(10),
     XX0SIO(10),D(10),VB(10),CM0(10),SND(10)
      COMMON/CB02/Q,DC0,DCSI,DCALO,DCSIO,CCI,DCAQ0
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
      COMMON/CB08/EA,EPD,B,EXPBV,EP0,ES,EALOX,ESIOX
      COMMON/CB13/C8,C9,C10,C11,C12,C13,C14,C15,C16,C17,C18,C19,C20,C21
      COMMON/CB17/TOTUAQ,TOTUSL,TOTUSI,UMIN,UTOT
C      ROUTINE TO CALCULATE THE TOTAL ELECTROSTATIC ENERGY
C      IN THE SURFACE LAYER AS A FUNCTION OF THE BOUNDARY VALUES
C      OF THE SYSTEM. THIS EXPRESSION IS ONE OF TWO USED,
C      DEPENDING ON THE VALUE OF THE DUMMY FIELD FLAG, IFLAG.
C      THIS ROUTINE CALLED IF IFLAG = 0
      OFFSET=1.0E30
      S0X=B*BETA(ISET)*D(ISET)/2.0
      CALL CK(71,S0X,'S0X   ','SLEN0 ')
      S1=EPD/B
      CALL CK(72,S1,'S1    ','SLEN0 ')
      T=TAN(S0X)
      CALL CK(73,T,'T     ','SLEN0 ')
      U=(C12/(2.0*B))*(T/(1.0+(S1*T)))
      CALL CK(74,U,'U     ','SLEN0 ')
C      IF INTEGRATION INTERVAL STRADDLES A SINGULARITY, KEEP OFFSET
C      TO ARBITRARILY HIGH VALUE TO ENSURE REJECTION OF SOLUTION
C      CALCULATE POSITION OF SINGULARITIES STRADDLING THE
C      UPPER INTEGRATION BOUND
C      UPPER BOUND :
      BU=ATAN(S1)
C      LOWER BOUND :
      BL=BU-S0X
C      GET SINGULARITIES THAT STRADDLE
C      UPPER BOUND:
      CALL SINGUL(BU,SL,SU)
      CALL CK(75,SL,'SL    ','SLEN0 ')
      CALL CK(76,SU,'SU    ','SLEN0 ')
C      SO IF LOWER BOUND BETWEEN UPPER AND LOWER SINGULARITIES,
C      ALL IS SERENE, SO KILL OFFSET
      IF((SL.LT.BL).AND.(SU.GT.BL))OFFSET=0.0
      TOTUSL=DC0*DCSL(ISET)*((-B*B*D(ISET))+U)+OFFSET
C      IF NOT, SCREAM
      IF(TOTUSL.LT.0.0)CALL PANIC(-3)
      RETURN
      END
C
C******
C
C
      SUBROUTINE SINGUL(X,SL,SU)
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
C      ROUTINE TO RETURN THE SINGULRITIES OF SEC^2(X)
C      STRADDLING X.
C      UPPER SINGULARITY = SU
C      LOWER SINGULARITY = SL
C      ALGORITHM IS NOT TRIVIAL - SEE  NOTES
      DATA PI/3.141593/,PI2/1.5707965/
      S1=PI2*AINT(X/PI2)
      IF(DMOD(1.0001*DABS(S1),PI).LT.0.3)S1=S1-SIGN(PI2,X)
      S2=S1+SIGN(PI,X)
      SU=S2
      SL=S1
      IF(X.LT.0.0)SU=S1
      IF(X.LT.0.0)SL=S2
      RETURN
      END
C
C******
C
C
      SUBROUTINE SIENER
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB02/Q,DC0,DCSI,DCALO,DCSIO,CCI,DCAQ0
      COMMON/CB08/EA,EPD,B,EXPBV,EP0,ES,EALOX,ESIOX
      COMMON/CB17/TOTUAQ,TOTUSL,TOTUSI,UMIN,UTOT
C      ROUTINE TO CALCULATE THE TOTAL ELECTROSTATIC ENERGY
C      STORED IN THE CONVENTIONBAL TRANSISTOR STRUCTURE
C      ALUMINIUM OXIDE :
      UALOX=DC0*DCALO*EALOX*EALOX
C      SILICON DIOXIDE :
      USIOX=DC0*DCSIO*ESIOX*ESIOX
C      TOTAL ENERGY
      TOTUSI=UALOX+USIOX
      RETURN
      END
C
C******
C
C
      SUBROUTINE SELECT
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB15/IPTR,POSSVA(2,100),LPOSVA
      COMMON/CB17/TOTUAQ,TOTUSL,TOTUSI,UMIN,UTOT
      RETURN
      END
C
C******
C
C
      SUBROUTINE SETDCS
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB01/DCSL(10),BETA(10),SNA(10),C0(10),X0ALO(10),
     XX0SIO(10),D(10),VB(10),CM0(10),SND(10)
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
C      ROUTINE TO SET DIELECTRIC CONSTANT OF SURFACE LAYER
      DO 100 I=1,NSET
      DCSL(I)=2.0
100   CONTINUE
      RETURN
      END
C
C******
C
C
C
      SUBROUTINE SETBTA
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB01/DCSL(10),BETA(10),SNA(10),C0(10),X0ALO(10),
     XX0SIO(10),D(10),VB(10),CM0(10),SND(10)
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
C      ROUTINE TO SET BOLTZMANN VOLTAGE
      DO 100 I=1,NSET
      BETA(I)=38.6
100   CONTINUE
      RETURN
      END
C
C******
C
C
C
C
C
      SUBROUTINE SETNA
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB01/DCSL(10),BETA(10),SNA(10),C0(10),X0ALO(10),
     XX0SIO(10),D(10),VB(10),CM0(10),SND(10)
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
C      ROUTINE TO SET SUBSTRATE ACCEPTOR LEVEL
      DO 100 I=1,NSET
      SNA(I)=1D22
100   CONTINUE
      RETURN
      END
C
C******
C
C
      SUBROUTINE SETND
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB01/DCSL(10),BETA(10),SNA(10),C0(10),X0ALO(10),
     XX0SIO(10),D(10),VB(10),CM0(10),SND(10)
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
C      ROUTINE TO SET SUBSTRATE DONOR LEVEL
      DO 100 I=1,NSET
      SND(I)=1.0
100   CONTINUE
      RETURN
      END
C
C******
C
C
C
C
C
      SUBROUTINE SETC0
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB01/DCSL(10),BETA(10),SNA(10),C0(10),X0ALO(10),
     XX0SIO(10),D(10),VB(10),CM0(10),SND(10)
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
C      ROUTINE TO SET BULK IONIC STRENGTH
      C0(9)=6.0D22
      C0(10)=2.0D22
      DO 100 I=1,NSET
      C0(I)=6.023D25
100   CONTINUE
      C0(1)=6.0D26
      C0(2)=2.0D26
      C0(3)=6.0D25
      C0(4)=2.0D25
      C0(5)=6.0D24
      C0(6)=2.0D24
      C0(7)=6.0D23
      C0(8)=2.0D23
      RETURN
      END
C
C******
C
C
C
C
C
      SUBROUTINE SETALO
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB01/DCSL(10),BETA(10),SNA(10),C0(10),X0ALO(10),
     XX0SIO(10),D(10),VB(10),CM0(10),SND(10)
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
C      ROUTINE TO SET AL2O3 THICKNESS
      DO 100 I=1,NSET
      X0ALO(I)=3.5D-7
100   CONTINUE
      RETURN
      END
C
C******
C
C
C
C
C
      SUBROUTINE SETSIO
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB01/DCSL(10),BETA(10),SNA(10),C0(10),X0ALO(10),
     XX0SIO(10),D(10),VB(10),CM0(10),SND(10)
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
C      ROUTINE TO SET SIO2 THICKNESS
      DO 100 I=1,NSET
      X0SIO(I)=5D-7
100   CONTINUE
      RETURN
      END
C
C******
C
C
C
C
C
      SUBROUTINE SETD
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB01/DCSL(10),BETA(10),SNA(10),C0(10),X0ALO(10),
     XX0SIO(10),D(10),VB(10),CM0(10),SND(10)
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
C      ROUTINE TO SET SURFACE LAYER THICKNESS
      D(1)=1.0D-9
      D(2)=1.5D-9
      D(3)=2.0D-9
      D(4)=2.5D-9
      D(5)=3.0D-9
      D(6)=3.5D-9
      D(7)=4.0D-9
      D(8)=4.5D-9
      D(9)=5.0D-9
      D(10)=5.5D-9
      DO 200 I=1,NSET
      D(I)=D(I)*1.0D5
200   CONTINUE
      DO 100 I=1,NSET
      D(I)=5.5D-9
      D(I)=1.0D-8
      D(I)=1D-9
100   CONTINUE
      RETURN
      END
C
C******
C
C
C
C
C
      SUBROUTINE SETVB
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB01/DCSL(10),BETA(10),SNA(10),C0(10),X0ALO(10),
     XX0SIO(10),D(10),VB(10),CM0(10),SND(10)
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
C      ROUTINE TO SET BIAS VOLTAGE
      VB(1)=1.0
      VB(2)=2.0
      VB(3)=3.0
      VB(4)=4.0
      VB(5)=5.0
      VB(6)=6.0
      VB(7)=7.0
      VB(8)=8.0
      VB(9)=9.0
      VB(10)=10.0
      VB(1)=10.0
      VB(2)=9.0
      VB(3)=8.0
      VB(4)=7.0
      VB(5)=6.0
      VB(6)=5.0
      VB(7)=4.0
      VB(8)=3.0
      VB(9)=2.0
      VB(10)=2.0
      DO 100 I=1,NSET
      VB(I)=10.0
      VB(I)=3.8
      VB(I)=5.0
100   CONTINUE
      RETURN
      END
C
C******
C
C
C
C
C
      SUBROUTINE SETCM0
      IMPLICIT DOUBLE PRECISION (A-H),DOUBLE PRECISION (O-Z)
      COMMON/CB01/DCSL(10),BETA(10),SNA(10),C0(10),X0ALO(10),
     XX0SIO(10),D(10),VB(10),CM0(10),SND(10)
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
C      ROUTINE TO SET BULK SPECIFIC ION STRENGTH
      CM0(1)=6.023D24
      CM0(2)=6.023D21
      CM0(2)=6.023D25
      CM0(3)=6.023D24
      CM0(4)=6.023D23
      CM0(5)=6.023D22
      CM0(6)=6.023D21
      CM0(7)=6.023D20
      CM0(8)=6.023D19
      CM0(9)=6.023D18
      CM0(10)=6.023D17
      CM0(10)=6.0D25
      CM0(1)=6.0D25
      CM0(2)=5.8D25
      CM0(3)=5.6D25
      CM0(4)=5.4D25
      CM0(5)=5.2D25
      CM0(6)=5.0D25
      CM0(7)=4.8D25
      CM0(8)=4.6D25
      DO 100 I=1,NSET
      CM0(I)=6.0D25
      CM0(I)=6.0D24
100   CONTINUE
      CM0(1)=6.0D25
      CM0(2)=2.0D25
      CM0(3)=6.0D24
      CM0(4)=2.0D24
      CM0(5)=6.0D23
      CM0(6)=2.0D23
      CM0(7)=6.0D22
      CM0(8)=2.0D22
      CM0(9)=6.0D21
      CM0(10)=2.0D21
      CM0(9)=4.4D25
      CM0(10)=4.2D25
      RETURN
      END
C
C*******
C
C
C
C