      SUBROUTINE UPDATE(V,VOLD)
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
      COMMON/CB15/IPTR,POSSVA(2,100),LPOSVA
      COMMON/CB25/ITHICK
      DATA NTRIES/8/
      DATA WIDTH/10.0/
C      NOTE TIS *WIDTH* MUST BE THE SAME AS IN SUBROUTINE SCAN
C      ROUTINE CALLED WHEN THE FIRST (IE MOST POSITIVE)
C      STRADDLING VOLTAGE FOUND BY SUBROUTINE CKPLOT ON INITIAL
C      SOLUTION SCAN
C      ALGORITHM VERY SNEAKY - SEE NOTES
C
C  **  THICK LAYER VERSION  **
C
C      SET THICK LAYER FLAG
      ITHICK=1
C      RETURN DIRECT IF NOT FIRST PAIR
      IF(IPTR.EQ.1)RETURN
C      OK, SO INCREMENT POINTER
      IPTR=IPTR+1
C      UNLOAD STRADDLING VOLTAGES INTO LOCAL VARIABLES
      V1=V
      V2=V+(WIDTH*(VOLD-V))
C      (IE V2 IS *WIDTH* TIMES AS FAR AWAY FROM V1 AS IS VOLD)
C      HAVE SEVERAL ATTEMPTS AT THE SOLUTION (EACH ATTEMPT
C      INCREAESES THE RESOLUTION BY A FACTOR OF (NSTEP/WIDTH)
C      (NSTEP - GLOBAL VARIABLE)
      DO 100 I=1,NTRIES
      CALL SCAN(V1,V2)
C      REPORT STRADDLE VOLTAGES
      WRITE(1,1000)I,V1,V2
      WRITE(4,1000)I,V1,V2
1000  FORMAT(13H LOOP NUMBER ,I3,12H  LOWER V : ,1PE23.16,
     X12H  UPPER V : ,1PE23.16)
100   CONTINUE
C      ITS ALL OVER - LOAD STRADDLING VOLTAGE VECTOR
      POSSVA(1,IPTR)=V2
      POSSVA(2,IPTR)=V1
      RETURN
      END
C
C******
C
C
      SUBROUTINE SCAN(V1,V2)
      COMMON/CB05/NSET,ISET,NSTEP,ISTEP
      DATA WIDTH/10.0/
C      NOTE THIS *WIDTH* MUST BE THE SAME AS IN SUBROUTINE UPDATE
C      INPUT TO ROUTINE IS A VOLTAGE WINDOW, (V1,V2), WHICH
C      STRADDLES AT LEAST ONE SOLUTION
C      THIS ROUTINE CREATES A SMALLER WINDOW THAT MOVES WITHIN
C      (V1,V2) FROM THE MOST POSITIVE END TOWARDS THE MOST NEGATIVE END.
C      THE WINDOE IS OF WIDTH (WIDTH*ABS(V1-V2)/NSTEP) .
C      THE FIRST TIME THIS LOCAL WINDOW FINDS A ZERO CROSSING,
C      THE OUTER WINDOW EDGES ARE SET TO THE INNER,
C      AND THE ROUTINE EXITS
C      GET THE SIGN OF THE FUNCTION AT THE MOST POSITIVE
C      WINDOW EXTREMUM
      FVOLD=F(V2)
      SFVOLD=S(FVOLD)
C      CALCULATE STEP SIZE
      VSTEP=ABS(V1-V2)/FLOAT(NSTEP)
C      CALCULATE LOCAL WINDOW WIDTH (IN VOLTS)
      VWIDTH=WIDTH*VSTEP
C      SET UP LOOP TO MOVE WINDOW
      NSTEP2=NSTEP+2
      DO 100 I=1,NSTEP2
C      LOWER LOCAL VOLTAGE LIMIT
      VL=V2-(FLOAT(I)*VSTEP)
C      UPPER LIMIT
      VU=AMIN1(V2,(VL+VWIDTH))
C      (SO THAT VU IS NEVER GREATER THAN THE MOST POSITIVE
C      OUTER WINDOW LIMIT)
C      SIGN OF FUNCTION AT LOWER LOCAL WINDOW EDGE
      FVL=F(VL)
      SFVL=S(FVL)
C      IF WE'VE CROSSED A ZERO, TIME TO GO
      IF(SFVL.NE.SFVOLD)GOTO 20
C      NO, SO STORE OLD SIGN
      SFVOLD=SFVL
100   CONTINUE
C      IF HERE, WE'VE DROPPED OUT OF THE LOOP.
C      THIS ONLY OCCOURS IF V1=V2, COS WE RAN OUT OF
C      SIGNIFICANT DIGITS
C      BLEAT
      WRITE(1,1000)V1,V2
      WRITE(4,1000)V1,V2
1000  FORMAT(17H ALGORITHM FAILED/6H V1 = ,1PE42.35/6H V2 = ,1PE42.35/
     X32H INSUFFICIENT SIGNIFICANT DIGITS)
20    CONTINUE
C      OK, RELOAD ROUTINE ARGUMENTS WITH INNER VOLTAGE WINDOW VALUES
      V2=VU
      V1=VL
      RETURN
      END
C
C******
C
C
